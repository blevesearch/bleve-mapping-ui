// Code generated for package mapping by go-bindata DO NOT EDIT. (@generated)
// sources:
// static-bleve-mapping/js/mapping/analysis-analyzer.js
// static-bleve-mapping/js/mapping/analysis-charfilter.js
// static-bleve-mapping/js/mapping/analysis-tokenfilter.js
// static-bleve-mapping/js/mapping/analysis-tokenizer.js
// static-bleve-mapping/js/mapping/analysis-wordlist.js
// static-bleve-mapping/js/mapping/analysis.js
// static-bleve-mapping/js/mapping/index-mapping.js
// static-bleve-mapping/js/mapping/type-mapping.js
// static-bleve-mapping/partials/analysis/analyzer.html
// static-bleve-mapping/partials/analysis/analyzers.html
// static-bleve-mapping/partials/analysis/charfilter.html
// static-bleve-mapping/partials/analysis/charfilters/generic.html
// static-bleve-mapping/partials/analysis/charfilters/regexp.html
// static-bleve-mapping/partials/analysis/charfilters.html
// static-bleve-mapping/partials/analysis/tokenfilter.html
// static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html
// static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html
// static-bleve-mapping/partials/analysis/tokenfilters/elision.html
// static-bleve-mapping/partials/analysis/tokenfilters/generic.html
// static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html
// static-bleve-mapping/partials/analysis/tokenfilters/length.html
// static-bleve-mapping/partials/analysis/tokenfilters/ngram.html
// static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html
// static-bleve-mapping/partials/analysis/tokenfilters/shingle.html
// static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html
// static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html
// static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html
// static-bleve-mapping/partials/analysis/tokenfilters.html
// static-bleve-mapping/partials/analysis/tokenizer.html
// static-bleve-mapping/partials/analysis/tokenizers/exception.html
// static-bleve-mapping/partials/analysis/tokenizers/generic.html
// static-bleve-mapping/partials/analysis/tokenizers/regexp.html
// static-bleve-mapping/partials/analysis/tokenizers.html
// static-bleve-mapping/partials/analysis/wordlist.html
// static-bleve-mapping/partials/analysis/wordlists.html
// static-bleve-mapping/partials/mapping/index-mapping.html
// static-bleve-mapping/partials/mapping/type-mapping-tree.html
// static-bleve-mapping/partials/mapping/type-mapping.html
package mapping

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"github.com/elazarl/go-bindata-assetfs"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticBleveMappingJsMappingAnalysisAnalyzerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x97\xc1\x6e\xe3\x36\x10\x86\xef\x79\x8a\x89\xb0\x88\x65\xac\x60\xa3\xd7\x1a\x3a\x6c\x17\x28\xd0\x43\x7a\xda\x9b\x11\x04\x5c\x72\x14\x13\xa1\x48\x95\xa4\xbc\x71\x02\xbf\x7b\x41\x52\x92\x49\xc9\x8e\xed\x06\x8b\xb6\x3e\x59\xe2\xcc\xcf\x99\x8f\xc3\x11\x59\xb5\x92\x5a\xae\x24\xfc\x26\x70\x8b\x5f\x24\x11\xbb\x57\xd4\xf7\x8a\x11\xf1\xd5\x6a\x91\x7f\x32\x54\x35\x58\xc0\xa7\xda\xbd\xfa\x43\x1a\x4b\x24\x75\xcf\x1b\x6b\x9b\xe2\x06\xce\xfc\x24\xa9\xb1\x80\x2d\x11\x2d\x16\x50\x93\xa6\xe1\xf2\xa9\x00\x63\x89\xe5\xf4\xb1\xd1\x58\xf1\x97\x39\xbc\x79\x99\x30\xd3\x42\x69\xfe\xf4\x27\xa9\x11\x4a\xef\xbc\x8a\xc7\xe4\x89\xf7\xa8\xb5\xd2\xf7\x68\x0c\x79\x72\xe3\x59\x96\x8c\x56\x4a\xd7\x0d\xb1\x9b\xe9\x48\x17\x10\x94\x7d\x68\xc9\x68\x12\x25\x94\x69\xd4\xab\x9b\xd8\x94\x74\xdc\xa0\x84\xb7\x7d\x10\x59\x2e\x81\xaa\x66\x07\x5c\x86\xf4\xa1\x52\x1a\x90\x71\xcb\xe5\x93\x37\x70\xcf\xf9\x96\x68\x78\x1e\x6c\x7a\x14\x9d\xbf\x44\x64\xc0\x10\x1b\xd4\x41\x4b\x55\x20\xd1\x58\x64\x40\xb4\x26\x3b\x33\x18\xf3\x0a\xf2\x67\x28\x4b\xc8\xe8\x86\xe8\xc7\x8a\x0b\x8b\xda\x64\xb1\x9e\x5f\x0d\xfc\xe1\xc6\xbb\x61\x28\x61\xfd\xb0\x4a\x0c\x86\x98\x68\xc5\x87\xa8\x16\xb1\xe6\x58\x72\x2a\xbb\x68\x5a\xb3\xc9\xa7\x9e\x6b\x5a\xf1\x87\x79\x3a\xdf\x3e\x79\x1a\xc1\x4c\xbc\xdd\xb2\x27\xd3\x1c\x84\xf6\x80\xc2\x60\xc4\xc0\xaa\x67\x94\xef\x41\xf0\x06\x17\x50\xb0\x31\x85\x44\xf5\x04\x86\x58\x38\xe6\x90\xf8\xae\xed\xb5\x20\x12\xf7\x40\x22\x9e\x69\x82\xe2\xed\x3d\xb5\xf5\xf3\x03\x94\x21\xa7\xf5\x73\x94\x79\x08\x61\x9f\xd4\xb5\x9f\x85\xbf\xa2\x76\x3b\xb2\x47\x15\x1b\x08\x45\xd8\xb7\xb1\x51\xdf\x53\xf2\x98\x92\x6f\x18\x8b\x46\x19\x9b\xcf\x96\xa4\xe1\xcb\xc7\x54\x7c\x56\x74\x7b\x70\xbe\x30\x2d\xa5\x68\x4c\x3e\xe8\x30\x62\xc9\x98\xf8\xa9\x08\x9d\xed\xe1\x6d\xcc\x66\xbe\x18\xfe\xfb\x86\x91\xea\x17\x40\x15\xc3\x13\xb3\x8c\x1a\x8c\xb3\x8f\x85\xc3\xff\xfd\x39\x34\xf9\x3c\xb5\x70\xd5\xfc\xbb\x5f\xc2\xf7\xf0\x7e\x9d\x58\x5d\xc8\x77\x24\xff\x0f\x01\x4f\x83\xf4\x84\xe3\xbd\xf9\xef\x32\x1e\xf1\x19\x43\x26\x2c\xb2\x88\xe1\xf9\xe1\x38\x96\xaa\x37\x49\x1c\x09\xb5\x18\xe9\xaf\x92\x9e\xdb\xb9\xdc\x96\x25\xb4\x92\x61\xc5\x25\x32\xb8\xbb\x83\xe8\x7d\x36\x69\x40\xfd\xe7\x05\x05\x52\x8b\xec\xcb\xb1\x76\x17\x9a\x47\x78\x98\x4f\xf6\x68\x9a\xa1\xc6\x5a\x6d\xf1\x78\x92\x5c\x32\x7c\x49\xca\xe4\x92\xc9\x4d\x23\x38\xc5\xe0\x5c\xc0\x2f\xc7\xd9\xfb\x3d\x76\xbe\x7c\xbf\x4d\xcd\xae\xe9\x0f\x1f\x2f\xe0\x23\x71\x1e\x7a\xc4\x7f\xa3\x84\xc7\x8c\xfe\x37\x35\x7c\xf4\x53\xfd\xb3\x6b\xf7\xf8\xa4\x17\xd5\x2c\x61\x31\xeb\x2b\x49\x8e\x56\xe9\x27\x50\x4c\x4a\xf2\x7a\x8c\x27\x52\x3b\xcb\x31\x9d\xf6\x22\x90\xd4\xdd\x02\x44\x34\x0b\xa4\x9b\x39\xb9\x2d\x2c\x18\x37\x35\x37\x26\x9f\x05\xb7\xd9\x71\xcd\xef\x2d\x17\x2c\x0e\xdc\x9d\xf3\x63\x55\xc7\xf9\x76\xfc\xf2\xf4\xf6\xcb\xfc\x35\x82\x1b\xd0\xf8\x57\xcb\x35\xb2\x2c\x3d\x73\x69\xb4\xad\x96\x31\xd9\xe4\xf0\xed\x9c\xeb\xd6\x58\x90\xca\x02\x11\x1a\x09\xdb\xc1\x77\x84\xd6\x20\x4b\x42\xf2\x96\xb7\xe5\xe4\x02\x73\x77\x77\x2c\xc8\xae\x87\x05\xfa\x86\x9b\x61\x19\xcc\xda\x09\x3d\x5c\x98\x5b\xdf\xb8\x7d\x9c\x0c\x66\x19\x7c\x0e\x21\x7f\x86\x6c\x36\x84\x8b\x2f\xdc\x58\x73\x55\xde\x28\x4d\xab\x11\xec\x86\x58\xb0\x1b\x6e\xdc\x61\xb3\xbf\x1e\x01\x55\x75\xa3\x24\x4a\xeb\xb0\x6e\x89\xe0\x07\x12\x7d\x3e\xd1\x15\x08\xe2\xb3\x34\xf1\xd7\x9c\x13\x10\xc6\x49\xf7\xef\xd7\xc4\x1f\x56\x4f\x78\xb9\xd1\xf1\xc6\x18\xbc\x5f\xc3\x51\x39\x8e\x65\x44\xfa\x20\xdc\x0f\xac\x26\xd9\xac\xb3\xc1\x29\x73\x0e\xc3\xd3\xea\x00\xcd\xa2\xb1\xf7\xc3\x4d\x32\x4d\x24\xeb\x85\xb2\x5f\x07\xcd\x43\xc4\x91\xc8\xf4\xf3\xe7\xf1\x12\x8b\x9d\xf4\xac\x88\xe6\xb9\xf0\x0b\xb8\x5c\xba\x02\xe5\xb6\x5b\xab\x6e\xe5\x81\xdb\x51\x3d\x98\x56\xd8\x11\xab\xc3\xc0\x79\x58\x30\xdd\xf1\x54\x28\x83\x79\x10\x98\x7f\xf0\xe3\xba\x5c\x82\xb2\x1b\xd4\x3f\xb8\x41\x60\xdc\x34\x82\xec\x82\xf7\x47\xbe\xc1\xfb\xd5\xcd\xdf\x01\x00\x00\xff\xff\x3e\x97\xcf\x5c\xfc\x10\x00\x00")

func staticBleveMappingJsMappingAnalysisAnalyzerJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisAnalyzerJs,
		"static-bleve-mapping/js/mapping/analysis-analyzer.js",
	)
}

func staticBleveMappingJsMappingAnalysisAnalyzerJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisAnalyzerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-analyzer.js", size: 4348, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisCharfilterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x6f\xe3\x38\x0c\xbd\xf7\x57\x70\x8c\xc1\xd8\x41\x33\xf1\xbd\x41\x2e\xdb\xc5\x02\x7b\xe8\x9e\xe6\x16\x04\x85\x6a\x33\xb1\x50\x59\xd6\x8a\x72\xdb\xa0\xd3\xff\xbe\x90\xe5\xd8\x92\x3f\x92\x0c\xba\x93\x53\x2c\x51\xe4\xd3\xe3\x23\xc5\x7d\x2d\x33\xc3\x2b\x09\x7f\x08\x7c\xc1\xfb\x82\xe9\xbf\xb8\x30\xa8\x1f\xaa\x9c\x89\x7b\xa3\x45\xf2\x95\xb2\x4a\xe1\x12\xbe\x96\x76\xe9\x6f\x49\x86\xc9\xcc\x7e\x17\xc6\xa8\xe5\x0d\x5c\xfc\x49\x56\xe2\x12\x5e\x98\xa8\x71\x09\x25\x53\x8a\xcb\xc3\x12\xc8\x30\xc3\xb3\x47\xa5\x71\xcf\xdf\x16\xf0\xde\x38\x72\xb1\x56\x95\xe6\x87\x7f\x58\x89\xb0\x69\x0e\xaf\xfd\x3d\x39\xb3\x8e\x5a\x57\xfa\x01\x89\xd8\xc1\xee\x47\x51\xb0\xbb\xaf\x74\xa9\x98\x29\xc6\x3b\x2d\x20\xd8\x9c\xa0\x05\xbb\x01\x4a\xd8\x84\xa8\xd7\x37\xbe\x69\x56\x30\xbd\x6f\xb8\x83\x0d\xbc\x7f\x38\x37\x69\x0a\x59\xa5\x8e\xc0\xa5\x23\x00\xf6\x95\x06\xcc\xb9\xe1\xf2\xd0\x18\xd8\xef\xe4\x85\x69\x78\xee\x6c\x4e\x64\x4c\xfa\xde\x3e\xef\x60\xe3\xec\xb6\xcf\x3b\x17\xe4\xc3\xe1\xb0\x5e\x48\xc1\x06\x92\x49\xf0\x3f\x7f\x42\x9c\xba\xa5\xef\x4f\x36\xd9\xdf\xdb\x0b\xc7\x8b\xf0\x22\xb5\x7c\x96\xd5\xab\xec\xb5\xf0\xe3\xa8\xf0\x07\x96\x4a\x30\x83\xb0\xe9\xb0\x91\x82\x5b\x88\x52\xc5\xb4\xe1\x4c\x50\xca\x24\x13\x47\xe2\x94\xf6\x68\x29\x3d\xa0\x44\xcd\xb3\x55\x61\x4a\x11\x8d\x09\x1b\x07\x20\xcb\x5e\x17\x23\xd2\x78\xc0\x37\x15\xdd\x5d\x17\xcd\x59\xbb\x60\x4e\x9a\x1f\xe7\x62\xfe\x89\x7b\x56\x0b\x33\x17\xf2\x54\x1b\x89\x9f\x11\xfb\xd3\x68\x6a\x2d\x07\x8b\xe1\xd9\x28\x1a\x97\x46\xa4\x51\x09\x96\x61\xb3\x1d\xec\xb6\x6a\x71\xc9\xbc\x08\xdb\xe2\xdd\xee\x5a\x8b\x5a\xe5\xcc\xe0\xfd\xc8\x60\x12\x7c\x53\xb3\xab\x03\x9a\x24\x4e\x99\xe2\xe9\xe3\xc0\x71\xbc\x58\x51\x9d\x65\x48\x94\x74\xe7\x73\x66\xd8\x90\x80\x59\x58\xd6\xb8\x59\x7e\x74\x29\x79\x34\x76\xc3\xbb\xdd\x62\xd5\xfd\x6f\x2a\x36\x8c\xb3\x84\xac\xca\x71\x26\xda\xa0\xc2\xad\xbd\xef\x78\x1d\x10\x37\x49\x4b\x72\x52\x3a\xdf\x43\xf2\x65\x54\x5b\x2b\x0b\xd6\x0f\x9e\x3b\x7d\xd8\xb3\xb6\x71\xb4\xc9\xed\x83\x5a\x37\x67\x85\xb5\xf5\x3c\xec\xce\x90\xd8\xf5\x8d\xeb\xbd\x25\x8b\xa1\x66\x1a\x4e\x05\xe1\x15\x61\xde\x47\x82\x9b\xb4\x6c\x08\xb1\x54\xf7\x71\x83\x8e\x33\x6e\xae\xe7\x4b\x7b\x3b\x1d\x61\x77\x4e\xec\xf7\x05\x93\x4d\xbe\x27\x05\x2d\xf1\xb5\xcd\xce\xb4\xeb\x5f\xc9\xd5\x0c\xb8\xcf\xa7\x6d\xc6\x71\x90\xc1\xdf\x94\xb9\x96\x9f\x2b\x68\xb8\x98\xa4\x19\x1e\xfe\x87\xe4\x5f\x43\x82\x17\xe6\xec\xfb\x74\xa9\x91\xda\xd9\x45\x78\x6a\x82\xb0\x3f\x06\x33\xce\x2a\xe7\x54\x72\xa2\x24\x76\xc7\xe2\x41\x8f\x69\x7d\x3e\xd5\x5c\xe4\xbe\x40\xed\x6c\xe2\x7b\x6d\xba\xcd\x70\x11\xe6\x47\x97\x66\xf4\xe1\x04\x1a\xff\xad\xb9\xc6\xdc\xeb\x38\xd0\xbd\x3e\xfe\x45\xbb\xbf\x69\xda\x0c\x46\x50\xd6\x64\x40\x56\x06\x98\xd0\xc8\xf2\x23\x3c\x21\xd4\x84\x79\x00\xa9\xb1\xfc\xb2\x19\x0d\x5d\xdf\xbe\x4d\x81\x6c\x87\x85\xd5\xe9\xdd\xf5\xbb\x3c\x6d\xad\xaf\x39\x85\x0c\xaf\x67\x13\xc7\x32\x2b\xe7\x56\xd5\xf6\x70\x0e\x71\x04\xb7\x0e\xfd\x2d\x44\x71\x87\x1c\xdf\x38\x19\xfa\x25\x0a\x50\x52\xad\x11\x4c\xc1\x0c\x98\x82\x93\xad\x82\xd3\x74\x07\x59\x55\xaa\x4a\xa2\x34\x96\xe1\x17\x26\x78\x4f\x4a\x2f\x5c\x1a\x54\x9a\xb7\xe3\xae\x3a\xd5\x70\xd6\x3d\x08\x83\x64\x1e\xba\xc1\x32\x64\x25\x3a\x31\x18\xdd\x4d\x4d\x10\x3e\xad\xd1\x9d\x1f\x39\x9c\x18\xfa\xbb\x7b\x71\xdd\xfb\xae\x2a\xea\x1e\xf8\xe6\x86\xcc\x60\x8b\x26\x5e\x7a\xd0\xae\x7c\xec\xd3\xd4\xca\x85\x9b\x96\xae\xd3\xf4\xc3\xcd\x20\x25\x54\x0b\x33\xe0\xad\xdf\x38\x47\x5b\xa0\x99\xb0\x02\x33\x51\x11\x26\xce\xc5\xe2\x93\x63\x44\x9a\x42\x65\x0a\xd4\xaf\x9c\x10\x72\x4e\x4a\xb0\xa3\x3b\xfd\x99\x69\xe3\x63\x7d\xf3\x5f\x00\x00\x00\xff\xff\xcc\xbe\x74\x51\x44\x0d\x00\x00")

func staticBleveMappingJsMappingAnalysisCharfilterJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisCharfilterJs,
		"static-bleve-mapping/js/mapping/analysis-charfilter.js",
	)
}

func staticBleveMappingJsMappingAnalysisCharfilterJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisCharfilterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-charfilter.js", size: 3396, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisTokenfilterJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xcd\x6e\xe3\x36\x10\xbe\xef\x53\xcc\x0a\x8b\xb5\x8c\xf5\x5a\xc5\x16\x7b\x49\xe0\x4b\xb7\x28\xd0\x43\x7a\xca\xcd\x30\x0c\x46\x1a\xdb\x84\x29\x92\x25\x47\x49\xdc\xac\xdf\xbd\xa0\x24\x4b\xa2\x7e\x6c\xc5\x49\xd1\x9c\x62\x71\xe6\x9b\xe1\x37\x3f\x1c\x72\x93\xc9\x98\xb8\x92\xf0\x9b\xc0\x47\xbc\x57\x7b\x94\x7f\x70\x41\x68\xee\x54\xc2\xc4\x0f\x32\x22\xfc\x64\x63\xa5\x71\x06\x9f\x52\xf7\xe9\x4f\x69\x89\xc9\xd8\xfd\xde\x11\xe9\xd9\x07\xb8\xfc\x27\x59\x8a\x33\x78\x64\x22\xc3\x19\xa4\x4c\x6b\x2e\xb7\x33\xb0\xc4\x88\xc7\x6b\x6d\x70\xc3\x9f\xa7\xf0\x92\x23\x15\xc6\xe6\xca\xf0\xed\x5f\x2c\x45\x58\xe4\xca\xb7\xcd\x35\x39\xf0\x1d\x8d\x51\xe6\x0e\xad\x65\x5b\xb7\x1e\x04\xde\xea\x46\x99\x54\x33\xda\x75\x57\x4a\x87\x60\x71\x72\xcd\x5b\xf5\xbc\x84\x85\xef\xf5\xed\x87\xa6\x28\x39\xf6\x36\x39\x7b\xb0\x80\x97\x63\x81\x13\x45\x10\x2b\x7d\x00\x2e\x0b\x06\x60\xa3\x0c\x60\xc2\x89\xcb\x6d\x2e\xe0\x7e\x87\x8f\xcc\xc0\xbe\x92\x39\xb1\xd1\x0f\xbe\xdc\xaf\x60\x51\x08\x2e\xf7\xab\xc2\xca\xb1\xeb\xc9\x1d\xd3\x8e\x42\x0b\x0b\x58\xae\x7c\x4f\x85\x62\xc9\x7d\x4b\xe6\x94\x09\xa1\x67\xdc\xc5\x78\xae\x95\xa5\x70\x12\x31\xcd\xa3\xb5\x07\x3d\x99\x95\x94\x4d\xe7\x36\x8b\x63\xb4\x36\xac\x60\x12\x46\xac\x09\x75\xc6\x3d\x27\x5a\x7c\x5c\xa7\x4c\xdb\xdb\x4a\xe7\x38\x9d\x57\xff\xe7\xe1\xf5\xe1\x67\x10\xab\x04\x07\x8c\xb4\xd2\xc1\xc9\x37\x81\x4b\xda\x2e\xf0\x12\x4e\x4b\x01\x17\x1f\xab\x61\x01\x61\x6f\x5e\xfc\xfc\x09\x93\xa8\xf8\xf4\xf5\xc1\x55\xd2\xd7\x92\x98\xc9\xd4\xb7\x90\xc9\xbd\x54\x4f\xb2\x51\x68\xf7\x07\x8d\xf7\x98\x6a\xc1\x08\x61\x51\x79\x68\x35\x7c\x81\x20\xd2\xcc\x10\x67\xc2\x46\x4c\x32\x71\xb0\xdc\x46\x8d\x44\xb0\xd1\x16\x25\x1a\x1e\xcf\x77\x94\x8a\xa0\x27\x1b\xbb\x26\x1c\xdf\x35\x5f\x41\xc2\x63\x5a\xc7\x2a\xd5\x2a\x93\x49\x70\x33\xd2\xac\xa7\x55\x18\xaf\x1b\x41\x80\xc9\x16\xd7\x72\x6b\x58\x3a\x1a\xb0\x56\xe9\xa2\x09\x6e\xb9\x92\xe3\xa1\x0a\xf9\x0e\xce\x1e\x0f\x4f\xca\x24\xeb\x94\x99\x3d\x9a\xd1\x70\xbe\x5a\x07\x55\xa0\xdc\xd2\x6e\x34\x5a\x21\xde\x41\x79\x1d\x59\xfd\x3c\x49\x65\x52\x26\xf8\x3f\xb8\xce\x24\x77\x75\x31\x1e\xaf\xad\xd9\xc1\xb6\x3b\x2e\xb7\x62\x3c\x62\x29\xdf\xc5\x21\xa5\x8b\x0e\x62\xc7\x63\xd5\x3a\x1d\x3c\x32\x99\x8c\x19\x61\xb1\x3e\x1a\xd2\x57\x6b\xa2\x1e\xcf\xd6\xd0\xef\xb8\x61\x99\xa0\x0b\x25\xd4\xdb\x48\xdd\x9f\x41\xca\x8c\x6c\x7d\xac\x21\xaa\x06\x18\xdc\xf4\x36\xca\xe5\x2f\x2b\x4f\xf3\xd8\x68\x67\x43\xd5\x77\x85\x2f\x0f\x2c\xde\x07\x37\x10\x6c\x98\xb0\x18\x74\xcf\xf7\x20\xe5\x8e\xe9\x5f\xfb\x56\xd8\x73\x77\x65\xc8\xcd\xaa\xac\xaf\xf0\xd1\x85\x37\x16\x68\xdf\x8b\xb3\x4e\x6f\xb8\xc2\xa7\x12\xe3\xdd\x7c\xaa\x3a\xcb\x15\xbe\x5c\x0a\xd1\xb7\xef\xdf\xc7\xb8\xf0\x86\x2c\xba\x98\x24\xa3\xec\xf7\xb4\xb4\x2b\x7c\x71\xa3\x9f\xcb\x68\xb9\x89\x83\x31\x66\xeb\x6e\x77\xf5\xc6\xbf\x0d\x53\xdf\xb3\xa2\x32\xd2\x19\xad\xdd\xd0\xcb\x25\x13\xce\xb0\x2b\xbe\x1e\x49\x8b\x9a\x19\x46\xca\xe5\x68\xd0\x57\x9c\x1b\x2e\x04\x16\xab\xa3\xb6\xea\x35\xe4\x2b\xb6\x5b\x03\xbc\x3d\xe3\x3b\xdd\xfc\x0a\x7f\xaa\xaa\xf9\x76\x29\xc3\xcf\xb7\x7a\x6f\x6a\xce\x74\xc2\x08\xef\xbb\x12\x67\x66\xe6\x2d\xfa\x23\x73\x43\x71\x72\xc5\xb4\xec\xdb\x6d\x0c\xcc\xc5\x99\xb6\x26\xb7\xf2\x3f\x0c\xce\xfd\xd4\x54\x63\x33\xdf\x40\xf8\xb1\x7b\x83\x99\x3b\x77\x9b\xe6\x93\xe2\x64\x75\xca\xee\x82\x56\x46\xb1\x36\xeb\x70\xce\x9f\xc9\xcb\x06\xc4\xea\x1c\x93\xd5\x05\xed\x15\x78\xe1\xb4\xc1\x40\x4d\xac\xb0\x38\xc6\xd0\xcb\xb1\x4f\x7b\x80\x15\xc7\x78\x6d\xf9\x74\xb9\x83\xde\x8b\xec\x85\x49\x7f\x39\x60\x62\x75\x36\xf3\x7f\xec\x98\xcc\x03\xdf\x9b\xdc\x12\x9f\xca\x20\x0d\x80\xbf\x2a\x66\x43\x0e\xbe\x47\xfc\x86\xb0\xbd\x58\xfe\x67\x31\x2c\x79\x1a\xc3\xc6\xe5\x78\x0d\xd0\xf1\x2e\x99\x30\x86\x8a\xae\xa1\xf3\xd7\xd8\x36\x55\xad\x56\x1b\x33\x19\xa3\x68\x64\x18\xf8\xfd\xd3\x7b\x67\x9a\x27\xdc\xa6\xdc\xda\x70\x52\xa8\x4d\xfa\x6f\xee\x0f\x19\x17\x49\x33\x69\x25\x4b\xbd\x0e\x93\x77\xa2\xf6\x47\x18\x7e\x3d\xca\x5f\x9f\xb8\x05\x83\x7f\x67\xdc\x60\xd2\x68\x46\x50\x9d\x40\xcd\x8d\x56\xff\x46\x51\xfe\x36\x05\x69\x66\x09\xa4\x22\x60\xc2\x20\x4b\x0e\xf0\x80\x90\x59\x4c\x3c\x97\x72\xc9\x8f\x8b\xce\xbb\xd7\xe7\xcf\x7d\x4e\x96\x8f\x0a\xf3\xd3\xb5\xc6\x3b\x03\xec\xd2\x81\x0d\x25\x4b\x7b\x7f\x79\xe8\xa0\xcc\x6f\xa7\x98\xc0\x24\x80\x2f\x85\xeb\x5f\x20\x98\x54\x6e\xe3\x33\xb7\x64\x5f\xb5\x7f\x94\x36\x33\x08\xb4\x63\x04\xb4\xe3\xd6\x95\xc3\xe9\x75\x0d\xf2\xab\x92\x44\x49\x8e\xde\x47\x26\x78\xcd\x48\xf3\x96\xd6\x2a\xba\xe6\x52\xb1\xd1\xde\x1e\x74\x5b\xfb\x41\x68\xe9\xae\x7a\xdb\xf3\x49\x09\x4e\x0c\x06\x37\x7d\x53\x84\x47\x6b\x70\xe3\x19\xef\x19\xba\xea\xa7\xab\x7a\x00\x1a\x08\x95\x13\xf2\x07\x93\x9a\xc2\x86\xef\xdd\x77\xb7\x9c\x28\x46\x58\xee\x68\x32\x6b\x6c\x6f\xe4\x3c\x11\x45\x2e\xe5\x38\x95\xac\x9f\xa6\x28\x4e\xad\xc8\xda\x4c\x50\x8b\xfd\x7a\xe1\x2c\xf7\x5e\xde\xf9\x65\x1c\x0b\x65\x31\x2c\x30\xa6\x6f\x1c\x54\xa2\x08\x14\xed\xd0\x3c\x71\x8b\x90\x70\xab\x05\x3b\x14\xda\x6f\x99\x67\x8e\xb7\x1f\xfe\x0d\x00\x00\xff\xff\x1a\xbd\x50\x93\x0e\x17\x00\x00")

func staticBleveMappingJsMappingAnalysisTokenfilterJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisTokenfilterJs,
		"static-bleve-mapping/js/mapping/analysis-tokenfilter.js",
	)
}

func staticBleveMappingJsMappingAnalysisTokenfilterJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisTokenfilterJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-tokenfilter.js", size: 5902, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisTokenizerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x57\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\x4c\x84\xc5\x5a\x46\xb4\x12\xde\x6b\x0c\x5d\xde\x6d\x0f\x3d\xa4\xa7\xdc\x0c\x23\x60\xa4\xb1\x45\x84\xa2\x58\x92\xca\x47\xb3\xf9\xef\x05\xf5\x49\xca\x94\xe4\xdd\xa0\x68\x4e\x31\x39\x7c\xe6\x99\x67\x66\xa8\xe1\xb1\xe6\x99\xa6\x15\x87\xff\x33\x7c\xc6\xfb\xea\x09\x39\xfd\x1b\xe5\x5d\x95\x13\xf6\x5d\x4b\x16\x7e\x51\x59\x25\x30\x82\x2f\xa5\x59\xfa\x83\x2b\x4d\x78\x66\x7e\x17\x5a\x8b\xe8\x0a\xd6\xfe\x38\x29\x31\x82\x67\xc2\x6a\x8c\xa0\x24\x42\x50\x7e\x8a\x40\x69\xa2\x69\xf6\x20\x24\x1e\xe9\xeb\x16\xde\x1b\x9c\xd6\x55\x5c\x49\x7a\xfa\x93\x94\x08\x69\x73\x78\x67\xef\xf1\x99\x75\x94\xb2\x92\x77\xa8\x14\x39\x99\xfd\x20\x70\x76\x8f\x95\x2c\x05\xd1\xc5\xf9\x4e\x47\x08\xd2\x9e\x9a\xb3\xeb\xb0\x84\xd4\x65\xbd\xbb\xb2\x4d\x75\xaf\x1c\xa4\xf0\xfe\xd1\xa2\x24\x09\x64\x95\x78\x03\xca\xdb\xf8\xe1\x58\x49\xc0\x9c\x6a\xca\x4f\x8d\x81\xf9\x1d\x3e\x13\x09\x4f\x83\x4d\xaf\x85\x0f\x7a\xff\x74\x80\xb4\x35\xdb\x3f\x1d\x5a\x1f\x1f\x7e\x16\x46\x3f\x05\x29\xec\x0f\x2e\x4d\x56\x91\xfc\x7e\x6a\xd4\xd7\x40\xe8\x38\x37\xf9\x8d\x45\xa5\x74\xb8\x49\x88\xa0\xc9\x83\x0b\xbe\x89\x3a\xc5\xb6\xb1\xaa\xb3\x0c\x95\x0a\x07\x9c\x9c\x68\x62\x63\x2d\x31\x34\xb6\xe3\xaa\xda\x0d\x87\x3e\xb6\xf1\xf0\x7f\x93\x5e\x17\x3f\x82\xac\xca\x71\xc6\xcb\xa4\x1c\x8c\xbd\x0d\xdc\x49\xb7\x26\x4d\xb8\xed\x2c\x4c\x8a\x94\x80\x14\x42\x6f\x61\xfc\xf8\x01\x9b\xa4\x5d\xfa\xf6\x68\xda\xe8\x5b\x27\xcd\x66\xeb\xba\xa8\xf9\x13\xaf\x5e\xf8\xe0\xe5\xfe\x4d\xe0\x3d\x96\x82\x11\x8d\x90\x0e\x04\x95\x80\x1b\x08\x12\x41\xa4\xa6\x84\xa9\x84\x70\xc2\xde\x14\x55\xc9\x28\x53\x72\x42\x8e\x92\x66\x71\xa1\x4b\x16\xcc\x94\xa2\x0d\x6f\xa4\x1e\xa5\x0a\x24\x9e\xf0\x55\x04\xb7\x17\xf9\x6a\x8d\x5b\x57\x63\xc7\x07\xf8\x9a\xa1\x30\xf9\xb8\x10\x66\xb0\x6f\x91\x7c\x39\x70\xa8\xff\x86\x47\x52\x33\x3d\xc7\xdc\x5b\xb5\xe6\x4f\xa2\xae\x25\x9f\x2c\xba\x67\x83\xc0\xd9\xfc\xb0\x8a\x63\x26\xc0\x5f\xf0\x36\x1c\x57\xc1\x2d\xec\x0f\xe7\x77\x65\x30\x84\x6b\x28\xd5\x9c\x9a\x8a\x9e\x67\xb6\x2a\x98\xd3\xf0\xb5\xc8\x89\xc6\xfb\xe9\xfe\x42\xaf\x9f\xf0\xbc\xd5\x9b\x63\x9b\x5f\x6c\xf1\xde\xa7\xdb\xe2\x0f\xda\x2c\xff\x07\x7d\xee\x53\x64\x68\x71\x7a\x84\xf0\x7a\x1a\x40\x6c\xa8\xda\xae\xf3\xb6\x24\xcd\x51\xf3\x2d\xe9\xea\x69\x74\x69\x50\x96\x4a\x79\x6f\x01\x1c\xd6\xe4\x83\x74\xb1\x2d\x1c\xac\x70\x3b\x2d\x94\x46\x4e\xa6\x70\xdd\xc9\xfb\x59\x91\xf9\x0c\x1b\x2d\x8c\xc6\xa3\xd7\xfe\x0b\x04\xde\x2f\xed\xe2\x6d\xb4\xf7\xc2\x1f\x16\x8a\xfb\x7b\x41\x78\x93\x64\x6f\x05\x73\x7c\xe9\x92\xe2\x05\xfe\x89\x0c\xf9\x89\x7d\x36\x57\x7e\x54\x27\x6b\xff\x4a\xb6\x3a\x5d\xd6\xe3\x5f\xcb\xcc\x8c\x00\x9f\xce\xf7\x25\xe1\x9f\x3b\x59\xfa\x90\xae\xdc\x98\x24\xcf\x7f\xef\x2f\x66\xbb\x9a\x9a\x5d\x3b\x4a\xa3\x54\x37\x74\xe2\x4b\xdb\xe9\x6b\x55\x10\x8f\x57\x7e\x2c\x6a\x55\x9c\x9d\xdf\x39\xc7\x27\xbb\xd6\x74\x3a\xcb\x5e\x62\x59\x3d\xa3\x37\x00\xca\x73\x7c\x5d\x1a\x1f\x6d\x76\x4a\x30\x9a\x61\x7b\x26\x82\xff\xf9\x27\xa2\xcc\x4c\xfa\xcc\xf2\x01\xee\x57\xc3\x79\x11\xc4\x39\x55\x25\x55\x2a\xdc\xb4\xc7\x36\x7e\xcc\xc7\x9a\xb2\xdc\xa6\x6d\x46\xf9\xa9\xec\xd7\xd3\x45\x98\x9f\xf4\x9b\x97\x02\x55\x20\xf1\xaf\x9a\x4a\xcc\x83\x9d\xe7\xf3\x6c\xab\x3a\xfc\x9b\x24\xcd\x3b\x02\xca\x5a\x69\xe0\x95\x06\xc2\x24\x92\xfc\x0d\x1e\x11\x6a\x85\xb9\x43\xa9\xb1\xbc\x4e\xcf\xde\x28\x5f\xbf\xfa\x48\x76\xf3\x5f\xdc\x8f\x41\xd6\x80\xbb\x37\x48\x73\xed\x34\x0d\x6e\x28\xf0\x86\x69\x0e\x9b\x00\x6e\x5a\xd2\x37\x10\x6c\x06\xc2\xf8\x4a\x95\x56\x3f\x15\x39\x72\x55\x4b\x04\x5d\x10\x0d\xba\xa0\xca\xdc\x14\xfd\x1b\x08\xb2\xaa\x14\x15\x47\xae\x8d\xb0\xcf\x84\xd1\x51\x8b\x31\x90\xc9\x5d\x34\x8d\xd0\x73\x23\xec\x6c\x02\x24\xcf\xcd\xa3\x87\x30\x06\xba\xc0\x36\x04\xe3\x7b\xc4\x89\x40\x51\x9e\x21\xbc\x20\x94\xf4\x54\x68\x93\x17\x89\x47\x94\xc8\xb3\xc6\xb2\xc0\x72\x40\x1c\x9e\x52\xda\xa0\xae\xa7\x61\x9a\x00\x8b\xbe\xb6\xb8\x2f\x25\x52\x1f\xbc\xe2\x6a\x54\xfa\x6e\x78\x56\xba\x5e\x82\x1e\x27\xb8\xf5\x4d\x8c\x23\x78\x70\x6b\x31\x72\x27\xc2\xd1\xe7\xee\x6a\xe1\xb5\xd6\xa4\x8d\x68\xec\xa8\x6c\x22\x8b\xd7\x85\xf3\x5c\x92\x98\xd2\xa7\xba\xab\x81\x7e\xd4\xa5\x7a\x52\x67\xaa\x66\x7a\x52\x0d\xe3\xc6\x05\xd5\x00\xe7\x97\x49\xc6\x2a\x85\x61\x8b\xb0\xfd\xe4\xac\x98\x24\x50\xe9\x02\xe5\x0b\x55\x08\x39\x55\x82\x91\xb7\xf6\xf4\x67\x46\xca\x8f\xdd\xd5\x3f\x01\x00\x00\xff\xff\x41\x02\xef\x6d\x3c\x11\x00\x00")

func staticBleveMappingJsMappingAnalysisTokenizerJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisTokenizerJs,
		"static-bleve-mapping/js/mapping/analysis-tokenizer.js",
	)
}

func staticBleveMappingJsMappingAnalysisTokenizerJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisTokenizerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-tokenizer.js", size: 4412, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisWordlistJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x26\x42\x10\xcb\xb0\x2a\xa7\xd7\xa8\xba\xb4\xa7\x02\x4d\xaf\x39\x18\x46\x40\x8b\x6b\x9b\xad\x44\xaa\x5c\x2a\x8e\x11\xf8\xdf\x0b\x4a\x7e\x88\x72\x8c\x44\x37\x71\x77\x66\x67\x9f\xab\x46\x17\x4e\x19\x8d\xef\x25\xbd\xd0\x93\xb1\xf2\x97\x62\xf7\x68\xa4\x28\x7f\x38\x5b\xc6\xb7\x5c\x98\x9a\x12\xdc\x56\xfe\xe9\xa7\x66\x27\x74\x41\xc9\x08\x1f\x7c\x5a\x54\x94\x60\x6b\xac\xe4\x04\x95\xa8\x6b\xa5\xd7\x09\xd8\x09\xa7\x8a\xe7\xda\xd2\x4a\xbd\x4e\xf0\xd6\xd2\x74\x21\x52\x8f\x40\xde\x02\xb3\xfe\xbb\xb1\x6a\xfd\xfb\x8a\x8d\xac\x35\xf6\x91\x98\xc5\xda\xdb\xa3\x28\xb0\xae\x8c\xad\xa4\x70\x02\x39\xde\xf6\x81\xa5\xd5\x85\xbc\xd3\x97\x72\xa9\x0a\x8a\xef\x27\x19\x66\x33\x14\x96\x84\x23\x14\xa6\xde\xf5\x11\x4c\x25\x15\x8e\xe4\xd3\x01\x39\x5f\x04\x84\x87\x0c\x91\x1f\x73\x0d\xac\x41\xda\xc8\xc3\x32\x64\xa3\xbe\x6b\xe1\xcb\x5b\x22\xc7\xa9\x31\xf1\xb1\x4e\xad\x57\xd0\x86\x54\x2a\xae\x14\x73\x3c\xee\x60\xe3\x49\x17\x76\x1f\x72\x0a\xd9\xca\xee\x91\x06\x9c\x6a\x85\x78\x50\xb1\x54\xd3\xd6\x43\xfa\x6e\xfe\x5b\x19\x8b\xf8\x45\x58\x28\xe4\xb8\xcf\xa0\xf0\x2d\x28\x69\x5a\x92\x5e\xbb\x4d\x06\x35\x9d\x0e\xb1\x83\x50\xad\xff\x5c\x2d\x90\xe7\xc3\x7e\x5d\x8b\x7e\xfc\x2c\xb9\xc6\xea\xec\xc2\xb6\x1f\x85\x7f\xc1\x6f\x20\xb3\x6e\x78\x73\x35\xe7\xec\x3d\xdc\xd0\xab\x37\x6d\xe7\xd0\x83\xba\x5b\xaa\x4c\xb7\x53\xdc\xaf\x7d\x30\x4a\xfd\x1c\x67\x33\xb0\xb1\x0e\x6e\x43\x38\x3a\xb5\x23\x0a\xa5\x25\xbd\x12\x43\x69\x67\x20\x89\x0b\xd2\xd2\x8f\x9b\xb1\x92\x6c\x88\xc7\x96\x50\x08\x0d\x49\x25\x39\x82\x72\x54\x31\xb6\xca\x6d\x4c\xe3\xb0\x11\x2f\x1e\xe6\x0c\x84\xfc\xd3\xb0\x3b\x12\x9f\x28\x02\x6d\xa9\x57\x13\x9f\x74\x8b\x04\xcb\x09\xde\x0e\xe5\xc7\x12\x5f\x20\x32\xec\x7b\xf5\x3a\x8f\x87\xa7\x85\xd2\xb8\x9a\xeb\x45\x4b\xb8\x6e\xb7\x30\x00\xcc\x5b\x9e\x45\x82\xaf\x93\x61\xa9\xf1\xf1\x6a\x0e\xba\xb1\x6c\x54\x19\xec\x80\xbf\x26\xc3\x3d\xb8\x19\x3e\xe2\xfa\xb1\x69\x8f\x92\x62\x58\xfa\xd7\x28\x4b\x32\x0a\x07\x67\x38\xa5\xbd\x79\x9c\xcd\xda\x53\x86\xca\xb7\x40\x1b\x07\x51\x5a\x12\x72\x87\x25\xa1\x61\x92\x81\xa4\xd6\xf3\x26\xbf\x38\x87\x77\x77\xef\x89\x3c\x9c\x9f\x54\x68\x51\xee\x58\x71\xea\xcc\x5f\xd2\xcf\x95\xa8\x79\xee\x99\x16\x9f\x4c\xae\x9d\xf1\x52\x79\x7d\xa2\x22\x89\x71\x84\x69\x27\x7a\x8a\x68\x7c\x12\x4c\xaf\x8a\x1d\x7f\x3e\x73\x4b\xdc\x94\xae\x77\x90\xcf\x8f\x9d\x3c\x6f\x0a\xc8\x22\xb7\xab\x29\x7a\x40\x54\x34\xec\x4c\x15\x25\x03\xab\x4f\x8f\xa3\x87\x60\x98\xce\x91\xb3\xd1\xb5\xd3\x59\x94\x86\x29\xee\x42\x9f\xcf\xe6\x3e\x1b\xfd\x0f\x00\x00\xff\xff\x4c\x7b\xef\x54\x12\x07\x00\x00")

func staticBleveMappingJsMappingAnalysisWordlistJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisWordlistJs,
		"static-bleve-mapping/js/mapping/analysis-wordlist.js",
	)
}

func staticBleveMappingJsMappingAnalysisWordlistJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisWordlistJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis-wordlist.js", size: 1810, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingAnalysisJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x8f\x1b\xb7\x11\x7f\xbf\xbf\x62\xb2\x38\x44\x52\x4e\x91\xde\x75\x10\x8a\x34\x6e\x01\xa3\x4d\xfb\xe2\xa0\x0f\x87\x83\x41\xed\x8e\x2c\xc2\x5c\x72\x41\x72\x75\x91\xeb\xfb\xdf\x0b\x72\xbf\x48\xee\x87\xa8\x3b\xa3\x49\x6c\xe9\xc5\xe7\x5d\xce\x70\xe6\x37\x1f\xfc\x71\xa4\xf5\x1a\x52\xc1\xb5\x14\x8c\xa1\x04\x89\xaa\x10\x5c\xd1\x1d\x43\xd8\x0b\x09\xbb\x92\xb2\x8c\xf2\x0f\x40\x20\x2d\x95\x16\x39\x10\x4e\xd8\x49\x51\x05\xa9\xc8\x0b\xc1\x91\x6b\x75\x73\xb3\x2f\x79\xaa\xa9\xe0\xf0\x57\x86\x47\xfc\xa9\x5e\xf2\xb3\x96\x6c\x7e\xab\x52\x51\xe0\x12\x6e\x0f\x5a\x17\x4b\xb8\x65\xe2\xc3\x12\x6e\x73\x91\x11\xb6\x80\xff\xde\x00\x00\x1c\x89\x84\x23\xc5\xa7\x7f\x73\x76\x82\x2d\x54\x12\xab\xe6\xc9\xfd\x8d\x5d\x54\x3f\xe5\xf8\x64\xd5\x7f\x42\x09\x5b\x68\xf6\x9d\x37\xaa\xcc\x47\xa2\x2e\x25\x6f\x04\x30\xa3\xba\x91\x98\x27\xc9\xd2\x59\x68\x3e\x89\x3e\x15\x98\x6c\x20\xa9\xdc\x4b\x96\xfe\xdb\xf4\x40\xe4\xfb\x3d\x65\x1a\xa5\x4a\x36\xf0\xf0\x18\xbc\xd7\xe2\x23\x72\xfa\x09\xa5\x51\x51\x72\x9a\x8a\x0c\x43\x1d\x76\x8d\xa7\xa4\x7d\xff\xbc\xb8\xb7\x7f\x3f\xfb\x4e\x66\xc8\x50\xe3\x90\x9f\x9c\xe4\xe8\xfa\x5a\x2a\xcc\x3a\xc8\xa8\x6a\x64\x7e\x55\x98\x55\x8b\xef\xdb\xb5\x74\x0f\x73\xb3\x7e\x11\x40\x40\x18\x4a\x3d\x4f\xde\x1d\xa8\xaa\xa2\x6b\xf6\x4c\x09\xe7\x42\xc3\x0e\xa1\x32\x26\x4b\xee\x3c\xa1\xda\x37\xd8\x61\x4a\x4a\x85\x40\x35\x50\x05\x3b\x34\xb9\x62\x8d\xda\x9d\x40\x1f\x10\x12\xb8\xab\xfe\x7f\x07\xc9\x2a\x71\xac\xe9\x22\xd5\x3d\x7b\xf6\x6c\x4d\x05\xdf\x53\x99\xcf\x93\x9f\x24\xc2\x49\x94\xa0\xca\xfa\x8f\x27\xc2\x35\x68\x51\x9b\x06\x33\xb3\x89\x71\xd6\x6c\x32\xfb\x4b\xb2\x08\x3d\xac\xd7\x35\x28\xf1\x0c\x7f\xfb\x85\x14\x05\xe5\x1f\x56\x4d\x3a\xaf\x1a\xcf\xd5\x83\xd1\xf4\x18\x1a\x15\x44\xc8\x47\x7a\x2a\x42\xeb\x75\x0b\xaa\x02\x22\xb1\x42\x83\x72\xc8\x2b\x0b\x14\xcc\x29\x37\x25\x40\x45\xa9\xa0\x60\x24\x45\xb5\xb8\x71\xc5\xf7\x54\x2a\x0d\xe9\x01\xd3\x8f\x60\x6d\x07\x53\x64\x0c\x32\xdc\x93\x92\xe9\x56\xbd\x07\xde\x90\xaf\xb5\xc0\xfb\x36\xc8\xdb\x2d\x84\xe6\x76\x61\x81\xa4\xda\xac\xb6\xb3\xb7\x5d\xe2\x42\xe4\xda\xab\x0f\xc8\x6b\x73\x4d\x06\x34\x72\x99\x48\xcb\x9c\xeb\x46\x5f\x2b\x61\xaa\x3f\xcb\x9d\x24\x1e\x32\xb9\x16\xba\x8f\x4a\xfc\xb7\xfc\x8d\x48\x6b\x0d\x36\x1e\x4b\xc8\xf2\x25\x24\x49\x44\x31\x34\xbe\x7b\x56\x63\x67\x76\x9b\xd0\xb1\xde\x87\xf2\xa6\xab\x22\x49\x0f\x60\x1a\x4f\x2b\x68\x9e\xce\x2d\x12\x22\x7d\x77\x2a\xd0\x24\xc8\x10\x1e\x46\x48\xf5\xd2\xbb\xf5\x76\x04\x45\x2b\xf5\x50\xab\x7e\xf4\x6b\xf0\x52\x20\xdb\x07\x01\xa0\x53\xa0\x7a\xc0\x86\x80\x18\xe3\xaa\x12\x6e\x7c\x37\x55\x0c\x89\xaf\xfa\x79\x08\xee\x5a\x27\x2f\x19\xf3\xfb\xa8\x29\x3a\x90\x98\x96\x52\xd1\x23\xc2\x01\x59\x51\xd7\xc7\x59\x3f\xc3\x5a\xf6\x5d\x2e\x88\x3e\x04\xd5\xed\x96\xa7\x17\xf1\x88\x2a\xed\x54\x47\x17\xa7\x11\x0b\xad\x18\x4b\xde\x56\x17\xd1\x36\x6f\x8d\x5c\x00\x2b\x20\x53\x78\x81\xaa\x98\xb0\xac\xd7\xc0\xc5\x53\x0d\xc9\x9e\x22\xcb\x94\xb1\x40\x9b\x03\xc6\x82\xd2\x4f\x7b\xbb\xea\xad\xed\x37\x94\x3b\x88\xaf\x2a\xf1\xd0\x59\xfb\x14\xb6\xfd\x85\x0f\x9d\xa2\xc7\x7e\x6e\xda\x97\xab\x73\x08\xfb\xab\xc7\x56\x80\xd7\x28\x6d\xe4\x2b\xab\x8c\x40\x66\xe1\xee\x14\xdc\xf7\xc4\x9f\x47\x11\xf7\x94\x11\x6d\x83\x36\x16\xbd\xb3\xe8\xdb\x4e\xc3\x51\x69\xcc\xa0\x90\xa2\x40\xa9\x4f\x7d\xf4\x9b\x37\xff\x32\x67\xa8\x8f\x7f\xfd\x8a\xf6\xbb\x8e\x2a\x77\x6f\x44\xea\x07\xa1\x5b\xfd\xe0\xea\x1c\x08\xc5\x99\x14\x8e\x6d\x47\x95\x11\xcb\xc1\xe8\x44\x7d\x8c\x1d\x77\xc9\x2a\xb9\x73\xed\x5d\x5c\x56\x24\xff\x3f\x63\x27\x6c\xbc\xa8\x3f\x0e\x70\xe3\x7e\xdf\x3b\x12\x56\x9a\x7f\x6a\x1e\xfe\x96\xbb\xf1\x72\x39\xfb\x2f\x86\xcc\xf7\x89\x7b\xf3\xb8\x53\x00\x9f\x3f\x43\x47\xeb\x5d\x55\xf6\x3e\xf0\x96\x2b\x4d\x78\x8a\x46\x95\x7d\xb0\x12\x05\xf2\xb9\x8b\xbb\xdd\x61\x53\xef\xe4\x22\x49\x38\xcd\x89\x31\xbe\x79\xb9\x6a\x9f\xa8\xbf\x71\xb2\x63\x98\xb9\xcb\x35\xe6\x05\x23\x1a\x7f\x95\x6c\xd3\x92\x25\xa5\x89\xa6\xe9\xfb\x42\xe2\x9e\xfe\x66\x6c\x9d\xad\xab\x47\x3f\xee\x4c\xdb\xfa\xb1\x3e\xb1\x66\x0b\xe8\x73\xe1\xd9\xba\x20\x52\x53\xc2\xd4\xba\xa1\x94\xeb\xa6\xd1\xac\x0e\x3a\x67\x33\x77\xfb\xee\xc6\xb5\x81\x59\x77\x67\xfa\x84\xd2\x82\x66\x2e\x4e\xde\x7a\x89\x4a\xb0\x23\x6e\x82\x1c\x34\x71\xda\x0c\x5f\x82\xc2\x14\xe8\x35\xa1\x67\x3f\x0f\x6d\xb0\xe3\x74\xd9\xa5\x93\xca\x6a\xa0\xe2\xd4\x0d\x10\x96\x49\xe5\x5e\x94\x2e\xda\xc2\x93\x9c\x46\xc3\x4d\xe1\x48\x54\x5c\x91\xb1\xda\xf4\xea\x74\x71\xdf\x55\xaa\x97\xff\x2b\x89\xaa\x64\x7a\x65\xa8\xe4\xbc\xdd\xbb\x7a\x18\x5a\x30\x52\x73\x7b\xc2\x54\x10\x23\xc3\x89\xb2\xac\x3a\x85\x2b\x5d\xe6\x0a\x65\x8e\x9a\x90\x91\x83\x7b\x36\x54\x4b\xff\x81\x27\x73\x30\x0c\xdb\x00\x75\x4f\xb7\x57\xb0\xef\xb6\x5b\x48\x12\xf8\xfe\x7b\x47\xf2\xbb\xf1\x83\xb6\xb6\x4c\x62\x2e\x8e\x68\xad\x11\xf5\x19\x3a\xb8\xf4\x55\x37\xb9\xa1\x78\x78\x28\x9e\xd3\xd7\x7a\xf4\x08\xdb\x11\x42\x60\x16\x38\xeb\x9c\x10\x7b\xde\x32\x41\x32\x20\x47\x42\x99\x69\x4d\xdd\x0d\xb1\xb7\xda\x84\x80\x11\x3e\xb2\x5f\x6d\xb7\xd1\xd6\x34\x10\x73\x36\x28\xf8\xfc\x79\x6a\xfd\x6d\x41\x24\x72\xdd\x97\xeb\x63\x65\xe2\xca\x08\x1f\x0b\x1d\x23\x7c\xbe\x38\x87\xb0\x93\xf3\xcb\xb1\x5a\x8a\xcd\xe3\x5b\x26\x3e\xac\x28\xdf\x8b\xf9\xac\x5a\x93\x51\x95\x53\x65\x2e\x31\x44\x6f\x60\x06\x77\xc0\xf1\x09\xde\x10\x8d\xf3\x85\x63\x59\x38\x69\x59\xaf\xe1\x49\xc8\x0c\x18\x55\x5a\x85\x13\xa6\xff\x08\x99\xfd\x93\x2a\x1d\x3f\x61\x6a\x24\xaa\x09\x93\x9d\xf8\xa8\xcd\xc3\xe3\xe4\x7c\x67\x68\x97\x73\xf3\x9d\x46\xe6\xa5\xf3\x9d\xd6\xe7\x6f\x6f\xc0\x53\x8d\xe1\x72\x52\xc4\x4e\x78\x5c\xac\xcf\x4c\x78\xba\x54\xb2\x23\x1e\xc1\xd9\xa9\x03\xc9\xec\x0b\xf5\xf8\xaf\xcf\xbd\xed\xeb\xbf\xdb\xb7\x0d\xfd\x8e\x70\xa3\x56\x17\xe2\xe0\x28\x1b\xe8\x18\xf1\x7a\x1f\x02\xab\x1e\x7b\x47\x49\xe0\x31\xe6\x3b\xcc\xaa\xb9\x16\xb1\xc3\x2c\xd4\x27\x10\x7b\xc8\xe8\x7e\x8f\xa6\xd7\x38\x97\x23\xd5\xbb\x0c\x38\xbb\xad\x32\x9a\xea\xf7\x6d\xac\x9a\x3b\xda\x50\x43\x73\xa5\x0c\xf7\x4a\x19\xaa\xcb\x25\x3f\xe2\xc9\xf8\xf2\x02\x49\xa5\x45\xd1\x97\x9a\xba\x97\xbb\xa9\x50\xdf\x13\x6d\x6a\x87\x39\x60\xb2\x7c\xe2\xa2\x1d\xa8\x9d\xa4\xf7\x63\x4d\xe6\x4a\xef\x5f\x4d\xef\x4d\xda\x98\x0a\x88\xa1\xf7\x4d\x18\x7e\x2f\x7a\x6f\x53\xfc\x02\x7a\x5f\xb5\x03\x75\x65\xf9\x21\x38\x57\x96\xff\x07\x61\xf9\xe3\xc7\xf9\x50\x40\x3c\x18\xcf\x2a\x7c\x09\xcf\x1f\xde\xf9\x0f\x45\x78\xd3\x03\x91\x24\x35\x67\x4f\xc3\x46\x02\xde\xfb\xf3\x81\xc8\x86\x3d\xc4\x32\xdf\x4e\xa6\xe2\xbe\x93\x94\x77\x78\x83\x73\xa4\xb7\x93\x7a\x29\xed\x0d\x3d\xff\xf6\xd8\xaf\xfb\x45\x76\x24\xff\xf5\x61\x3f\xc3\x80\x7b\xb9\x65\x20\xae\x88\xf0\x0e\x5b\xc8\xfa\xf7\xdc\xb6\x03\x11\xe7\x1e\x7a\x96\x04\xb7\x7a\x7a\x41\xef\xa6\x99\x91\x77\x7a\x77\xdf\xa0\x8c\x5b\xdb\xd2\x16\x89\xf6\x2b\x8a\x76\xb6\xe7\x02\x3b\xd4\xfa\x3a\x59\xeb\xd9\x76\x58\xf2\x21\xd8\x62\xa0\x9d\xd9\x9c\x09\x94\x4d\x77\xdc\x86\x76\xb6\xa0\x38\x94\xd3\x83\x7b\x80\x6f\xc2\xd4\x2d\xfe\x22\x06\x3a\x5e\xf3\x57\x0e\xfa\x6a\x0e\x6a\x12\xa2\x4a\xa1\x18\x16\xda\x85\xe2\x3a\x66\xbe\x12\xd0\x2b\x01\x7d\x15\x01\x9d\x3a\x51\x87\x42\xe2\x01\x19\xa1\xf2\x2b\x25\xa1\xed\x2f\xe6\x7a\xec\xf3\x5d\xf3\x26\x9e\x7c\xb6\x22\x11\xdc\x73\x50\xfd\x39\xea\xd9\x0a\xbd\x94\x79\xb6\xee\x7e\x7b\x94\xb3\x8b\x74\x24\xe1\xf4\xc0\x3e\xc3\x37\x3b\xe5\x96\x68\x3a\x1c\xf3\x07\xa1\x0f\x28\x7f\x70\x13\xad\x91\xf3\x87\xae\x34\x96\x6d\x76\x9a\x06\xe7\xad\x34\x82\x6f\x3a\x58\x78\x7b\x0f\xfc\x32\xa2\x7d\xbf\x72\xb4\x47\xce\x16\xe9\xa7\x81\xc1\x22\x9d\xa0\x79\x63\xbf\x20\x19\x87\xf7\xcf\x45\xe1\x0d\xa0\x2d\xe1\xbe\x08\xcf\x97\x90\xe6\x97\x52\xe4\xd1\xd6\x74\x65\xc8\xaf\x66\xc8\x5d\x39\x45\x10\xe4\x36\x10\x57\x7e\x7c\xe5\xc7\x57\x7e\xfc\xfa\x01\xed\xe0\xf1\x3f\x14\x10\x0f\xc6\xb3\x0a\xbf\x66\x6e\x3c\x36\x9c\x7d\xe7\x7e\xb7\x7b\x11\x41\x8e\x1e\xcf\x8e\x6c\x11\x45\x92\x5f\x37\xa0\xf5\xbe\x19\xfd\x36\x99\xf2\x85\xd3\xd9\x00\xf4\x18\xba\xfc\x35\x8e\x66\x9d\xaf\xce\xfb\xb3\xd9\xc9\xdf\x4a\x80\xff\x75\x7e\x38\x9d\x1d\xfd\x3d\xc4\xd4\x7c\xb6\xa7\xef\xcf\x30\xa0\x9d\xa8\xfa\x2b\xff\xfc\x32\xfc\x33\x7e\x44\xeb\x04\xe3\xca\x41\xaf\x1c\xf4\xca\x41\xbf\xc0\x8f\x04\xbe\xec\x90\xd6\xd7\xf9\x95\x31\xd1\xe7\x9b\xff\x05\x00\x00\xff\xff\x0b\x26\x20\x9a\x10\x3e\x00\x00")

func staticBleveMappingJsMappingAnalysisJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingAnalysisJs,
		"static-bleve-mapping/js/mapping/analysis.js",
	)
}

func staticBleveMappingJsMappingAnalysisJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingAnalysisJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/analysis.js", size: 15888, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingIndexMappingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4b\x8f\xdb\x36\x10\x3e\x5b\xbf\x62\x6a\x18\xb1\x04\x68\xd7\x3d\xc7\xd0\x61\xbb\xe9\x21\x2d\x36\x29\xd2\xa0\x97\xc5\xc2\xa0\xa5\x91\xcd\x35\x45\x0a\xe4\xc8\x1b\x77\xed\xff\x5e\x50\x0f\x9b\x7a\xd8\xeb\x06\x2d\xe2\x93\xcc\x99\xf9\xe6\x9b\x27\x99\x16\x32\x26\xae\x24\x70\xc9\xe9\x17\x81\x5b\xfc\x28\x13\xfc\xf6\xc0\xf2\x9c\xcb\xd5\xbd\x92\xa4\x95\x10\xa8\x7d\x0f\x00\x60\x62\x62\x95\x63\x08\x93\x35\x51\x1e\xc2\x44\xa8\x55\x08\x93\x82\x2f\x1f\x54\xc2\x44\x08\xdc\xb1\xfd\x28\x43\x50\xb9\xc5\x36\x01\xbc\x96\xe6\xf5\x5f\x88\x8e\x5f\xfb\x3d\xbc\x1e\xe6\x9e\x03\x7e\x6b\x88\x11\x8f\x17\xb9\xc6\x94\x7f\x83\x68\xf8\x78\xbf\x87\x69\x75\x72\xb3\xb4\xa4\x6f\xb2\xca\xe9\x74\xee\x79\xa3\x2d\xd3\x2d\x26\x10\x95\xf8\x8e\x8f\xb6\x14\x7e\xfb\xf3\xf3\xa7\xdb\x9c\x69\x83\x7e\xf9\x69\x48\x73\xb9\xe2\xe9\xce\x6f\x07\x14\x04\x35\x55\xf7\xf8\x96\x76\x39\x1a\xc7\xc7\x80\xb0\x0e\xb3\x27\x65\x92\x89\x9d\xe1\x67\xad\x8f\xf2\x1a\x60\x34\x28\xad\x3e\xfe\x46\xfd\x26\x8e\xa3\x79\x19\x31\x5e\x33\xbd\x48\xb9\xa0\x6b\x40\x5b\xca\x97\x71\x49\x6d\x50\xf2\xab\xa8\x3a\xaa\xfb\xfd\x5b\x90\x57\x73\x6d\x6b\x5f\x41\x76\x91\xb1\xfc\x5a\xd8\x52\xd5\x6d\x69\x9e\x42\xab\x85\x1e\xc7\x09\xa6\xac\x10\xb4\xa8\xfb\x75\xfc\xd4\xcc\xc6\x70\xe7\x3c\x8e\xc7\x4f\x10\xc1\x1b\x18\x55\x67\x1d\x2a\x9f\xb6\xfb\x29\x8b\x4b\xab\x7a\xa4\xbf\xee\x72\xec\x4f\x74\x33\xcc\x7d\xaf\xa7\xc1\x6d\x8f\x26\x37\x7f\x31\xc1\x13\x88\xa0\x59\x1b\x7e\x00\xaf\xa0\x91\x0a\x2d\xad\xd3\x46\xc3\x0f\xe6\xd0\x19\x6b\xd7\xcb\x17\x34\x85\xa0\x4e\x5c\xd5\x61\x6d\x54\xd2\xbe\xab\xb3\x7b\x4f\x5a\xf8\x97\x57\x4f\x43\x74\x36\x83\x9b\x7f\xf9\x6b\xb1\x6c\xe6\xe3\x13\xcb\xd0\xd9\x53\x9d\xf3\xfd\x1e\x1e\x9f\xe6\xde\xa8\x36\x12\x8a\x25\x77\x1d\x43\x37\x41\xa7\xed\x63\xb9\xdf\xe6\xca\x90\x3f\x9d\xb1\x9c\xcf\x16\x2d\xdc\x69\x78\x3e\x59\x7e\x10\xdc\x1e\x71\x4c\x11\xc7\x68\x8c\x7f\x74\x92\x30\x62\xae\xa3\x0b\x11\x59\xd5\xd3\x1a\x98\x1f\x4d\x0e\x0e\x3e\x6a\xad\x74\x1b\x3d\x84\x58\x25\x68\x7d\x8c\x46\x4d\xdc\xa5\xda\x03\x1a\xc3\x56\x58\x23\xbb\x78\x73\x6f\xd4\xec\xbc\x14\xfc\xe1\x4c\x46\x11\xc8\x42\x88\x12\xd7\x21\xdd\xcb\xa8\x1f\xb4\x7a\xbc\x56\x4b\x18\xe1\x57\x9e\xe1\x1f\x76\x75\xf7\x6a\x36\x24\x1d\xa8\xdc\x07\x46\x48\x3d\x90\x2b\xeb\x97\xf4\x8d\xff\x97\x2a\x0e\x47\x5a\xd6\xb2\xa1\xb0\x28\x2f\xb0\x1f\x51\xd2\x41\x72\xe7\x0b\x3b\x90\xf0\x4e\x79\xbf\x7b\x8a\xeb\x4d\x74\x4a\xe1\x6c\x06\x77\x42\xa8\x17\x03\xb4\x46\x88\x99\x5d\x7c\x40\x0a\x12\x24\xd4\x19\x97\x68\x03\xa1\x35\x6a\x9c\x1a\x60\xb0\x2d\xd7\x5b\x59\x37\xa8\xb7\xeb\x29\x85\xf5\x6e\x7b\xdf\xd9\x86\xa1\xf7\xa6\x37\x8d\xa4\x39\x6e\xb1\x3a\x2e\xb4\x46\x49\x6d\x2f\xa1\x8b\x91\xa3\x5e\xdb\x9b\x84\x4b\xd0\x68\x72\x25\x0d\x5a\x14\x06\x85\x41\x3d\x35\x70\xaf\x91\x11\xce\x3e\x28\x89\xb3\xcf\xbf\xc3\xb2\x20\x52\x12\x62\xc1\xe3\xcd\xdc\xc5\x51\x3a\x2c\x3d\x5a\x33\x78\x61\x92\xec\x6b\x87\x14\x18\xac\x98\xb4\x18\x54\x8f\xa0\xc1\xab\xe8\xfd\xf9\x86\xfe\x4f\xaa\xe6\xbc\x41\xfb\x03\xe3\x5e\x8f\x29\xf8\x3f\xb5\x93\xef\x07\xdd\x81\xa9\x5b\xc0\x36\x9f\xd3\xb9\xa7\x1a\xd9\xeb\x51\x5f\x7c\xf3\x0d\x04\x7b\x7c\xf8\x95\x1e\x9a\x17\x5f\x79\xe3\xd1\xe9\x6e\x6d\xba\xb8\x52\xea\xdc\xd2\x10\x35\x86\xf6\x4e\x3f\x29\x26\x28\x90\xb0\x2d\xf3\x3a\xc1\x9c\xe7\x6a\x62\x5d\x2c\x7d\x1d\x04\xbd\x01\xfa\x82\x71\xa1\x0d\xdf\xa2\xd8\x81\xc6\x4c\x6d\x11\x70\x8b\x7a\x07\x28\x49\xef\xe0\x85\xd3\x1a\xa6\x93\x29\x54\x0f\xea\x10\x5e\xd6\x3c\x5e\x43\xc6\x57\x6b\x82\x25\x36\x28\x49\x51\xb5\x9e\x5c\x15\x82\xe9\x67\x03\x19\x12\x2b\xd7\x4e\xbb\x72\x15\x8f\xac\x5b\x2d\x1b\x93\x4a\xed\x79\x14\xc1\x58\x2d\x9f\x31\xa6\x71\xb7\x62\xa9\xd2\xe0\xdb\xb2\x6c\x6c\xc7\x67\x5d\x71\x07\x6b\x53\x61\x55\x29\x18\xc3\xbb\x77\xb0\x29\x1f\xa0\x77\xe4\xff\x5c\x89\x26\x3d\x0f\x9d\x5c\x67\x8f\x1b\xa7\x00\xee\x2f\x56\x76\x48\x0a\xec\x4b\x9d\x0e\x6a\x7e\x16\x06\xa2\x26\xf4\xc7\xcd\x93\xdb\x24\x43\x59\xb0\x2a\x6e\x22\x2c\x79\x6e\x7e\xcd\x72\xda\x55\xc2\xef\xe2\x7d\xf0\x86\xff\x1d\x7a\x6d\x94\xb5\x7a\xe4\x34\x75\x35\x05\xb5\x7c\x76\x09\xb4\xcb\xd2\x11\x3a\xa8\x29\x13\x06\xdd\x51\xeb\xc8\x49\x37\xf9\x3c\x78\x07\xef\x9f\x00\x00\x00\xff\xff\xd2\xaf\x0c\xf5\x70\x0e\x00\x00")

func staticBleveMappingJsMappingIndexMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingIndexMappingJs,
		"static-bleve-mapping/js/mapping/index-mapping.js",
	)
}

func staticBleveMappingJsMappingIndexMappingJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingIndexMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/index-mapping.js", size: 3696, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingJsMappingTypeMappingJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x5a\x5f\x6f\xdb\x38\x12\x7f\xbe\x7c\x8a\xa9\x50\xac\x6d\xd4\x55\x7b\xaf\xf6\x1a\x8b\x6e\xda\x02\x3d\xe0\x6e\x8b\x6e\xaf\x2f\x86\x61\xd0\x12\x9d\xb0\x96\x48\x81\xa2\xb3\xf5\x25\xfe\xee\x07\x92\xe2\x5f\x51\xb6\xb2\x40\xfd\x12\x59\x33\x1c\x0e\x87\x33\xbf\xdf\x90\xce\xfe\x48\x0b\x41\x18\x05\x42\x89\xf8\xbd\xc2\x0f\xf8\xeb\xa9\xc1\xff\x46\x4d\x43\xe8\xdd\x2d\xa3\x82\xb3\xaa\xc2\x7c\xfa\xb2\x2d\x58\x83\xe7\x20\x9c\xf4\x13\x9d\x03\x6b\xe4\xe0\x76\x06\x8f\x37\x00\x60\xbe\xc2\xca\x3e\x3d\x3d\xc1\xe3\x79\x79\xa3\xa4\x0f\x88\x43\x89\xf7\xe8\x58\x89\x8f\x04\x57\xa5\x9c\xc9\xa9\xae\xb3\x58\x96\x6d\xe4\xf0\x4c\xe0\x1f\x22\x5b\x26\x2d\xbc\xa3\xa8\x3a\xfd\x0f\xf3\x21\x2b\x46\xde\x59\x1a\xb0\xf2\xa7\x60\x5c\x3a\x22\xf8\x11\x6b\x0d\xb2\x87\x69\xd2\xa0\x52\xcd\x36\xf0\x62\x05\x47\x5a\xe2\x3d\xa1\xb8\x34\x8b\x97\x9f\x94\xd9\x4b\x86\xf4\x74\xe7\xa4\x5b\x9f\x68\x89\x7f\x8c\x73\x4b\xa9\x8e\x74\xcb\x98\xbd\x64\xe8\xb2\x5b\x45\x75\x2c\xf1\x57\xcc\xeb\x6f\xb8\x10\x8c\xb7\x63\x7d\x8c\xc7\x8d\x76\x38\x31\xe1\xe8\x29\x46\x2c\xe5\x13\x7d\x57\x55\xcf\x5a\x84\x1a\xf1\x3c\xf7\xcd\x24\x23\xcc\x5e\x72\xf9\x3d\x12\xf8\x23\xe3\x35\x12\xb0\x02\x7a\xac\xaa\x2b\x0e\x3b\xfd\x91\xee\x06\x13\x5c\x35\x39\xe0\x6a\x87\x10\x1f\x28\xda\x55\xb8\xbc\x1a\xda\x50\xfd\xba\xa3\x3d\xf3\xd7\x0c\x5e\x76\xf3\xfd\x89\xa2\x9a\x14\x63\xdd\xec\xd4\x47\xbb\xe9\xcc\x5f\x33\x68\xdc\x54\x7f\x6a\x2d\x94\xc9\xbe\x93\xb8\x7c\xcb\xe8\x03\xe6\xe2\x23\x67\xb5\x07\xd1\xd3\x00\x90\x67\x7a\xa8\x06\xeb\x7c\x6f\x80\x54\xda\x58\x4f\x24\x8e\x4e\xe6\x30\xa1\xc7\x7a\x87\xb9\x7c\x2a\x91\xc0\x82\xd4\x58\x3e\xef\x18\xab\x30\xa2\xea\x35\x69\x55\xdc\xe4\xf3\x1d\x66\x0d\x23\x54\x4c\x36\x1e\x88\x1f\x08\x2d\xdf\x09\xa1\x0a\xd1\xad\x3a\x53\xf3\x65\x0b\xef\x95\xfc\x4c\x1a\xce\x1a\xcc\xc5\x69\xb2\x50\x09\x3b\x0f\xa5\x14\xd5\x38\x2d\x91\x2b\x4b\x4b\x50\x07\xeb\x69\x69\x2b\xa1\x35\x2d\x22\x12\xde\x86\x44\xaa\x04\xb7\x02\xf3\x7a\xfb\xa0\xd1\xe3\xb2\x26\xa1\x5b\x54\x55\x69\x1d\x19\xd9\xed\x5e\x15\x49\x4f\xe1\xec\x1e\xb3\x6e\x93\xfb\x41\x1b\x0e\x0b\xd6\x49\x3d\x30\xaf\x4e\xa5\x01\xa1\xce\xba\x6d\x14\x3e\xe7\x98\x4e\xbf\x6e\xa3\xed\x26\xaf\x27\x9d\x97\x32\x95\x26\x1b\x58\x25\x44\x36\x3d\xde\xbc\x81\xd7\x7f\xef\x13\xa4\xae\x97\xfc\xe6\x71\x19\x28\xe0\x92\x08\x42\xef\x2c\x08\xfa\xb2\x86\x35\xc7\x66\x58\xf2\x95\xdd\xdd\x55\x92\x98\x4d\xef\x33\x65\xbb\xef\x7e\xf9\x46\x66\xa6\xe1\xf7\x15\x28\xf5\xdf\x94\x79\x58\xc8\x6f\x41\xdd\x76\xda\x1c\xd7\xec\x01\xcb\x6a\xfd\x8c\x38\xa6\x22\x9a\x6f\x0e\x4a\x2d\x31\xad\x5c\x99\x0a\xee\x7b\x46\xb1\x56\xdd\xa3\xaa\xc5\xb3\xa5\x0c\xee\x2d\xa2\x05\xae\x00\xd1\x13\x48\xc5\x36\xbf\xb1\xe3\xfd\x79\xa7\xb3\x94\x4f\xa8\x2c\x6f\xef\x49\x55\x2a\x18\xf7\x1d\xea\x62\xec\x7b\x23\x01\x30\x8c\xf5\x2c\xca\x51\x8e\xc5\x91\xd3\xa5\x97\x3e\xf6\x51\x82\xc4\x3e\x00\x07\xf9\xd9\xca\xbc\x59\xc0\x44\xe1\xc4\x24\x4c\x4e\x03\x12\x0b\xc8\xb2\x50\x22\x2b\xa1\xff\x56\x82\xc3\xa2\xd7\x4d\x86\x3a\x26\xcf\x17\xc9\x9e\x31\xd4\x55\xa0\xb1\xe8\xf7\x6f\xa1\x96\xc2\x8f\x45\xbf\x9d\x8a\xb5\xfa\x50\x12\x0f\x8a\x1b\x95\xb4\x05\x0d\x31\xc9\xb1\xaa\x57\x08\x47\x79\xa0\xb3\x18\xe0\x74\x0f\x85\xdc\xc6\xed\xf3\xad\x2b\x27\x9b\x13\x33\x78\x04\x9d\x4c\x1f\xa8\xe0\x27\x93\x23\x9a\x55\xda\x39\xec\x67\x4b\xdf\x48\x28\xce\x8f\xb4\xbd\x27\x7b\x31\xdd\xcf\x96\x37\xa9\x0c\xef\x26\x5b\x0e\x15\x9d\x6b\x6d\xd2\x29\xdc\x51\xde\xcf\x4c\x62\x39\xb8\x36\xd3\x68\x8f\xe2\xd1\x56\xdc\xb9\x37\x58\x0c\xf5\x50\x31\x78\x13\x68\x13\xf0\x1b\x04\x78\x0b\x0b\xfb\x7d\x32\xa6\x30\x3a\x7a\x58\xa4\x7b\xa5\x28\x61\x34\x5b\xc4\xba\x5d\x3f\x12\xea\xea\x7d\x5d\xc0\x7a\x33\x4f\x85\x40\x49\x52\xc9\x55\x3f\x2b\xb9\x8c\xb5\x39\xd4\xe9\xf4\x32\x0a\x36\xc1\xea\x8b\x09\x56\x3f\x3b\xc1\x2c\xfc\x5e\x20\x08\xb9\xa3\xa8\xd3\x71\x5c\xc8\x76\xdf\x73\xb5\xab\x1b\xaf\xb4\x18\x87\xa9\x51\x07\x42\xf5\xb0\x38\x8d\xd8\xee\xfb\x3a\xdb\x66\xf0\x4a\xab\xbd\x82\x6c\xfb\xe1\xcb\x97\x6c\x13\xb8\x79\x41\xf9\xf3\x97\x0f\xdf\x94\xb6\x94\xc9\xb7\x9b\x64\x22\x2a\x07\x5d\x6c\x5c\xb3\x9b\x0c\xdd\x00\xaf\x05\xf4\xd4\x23\x35\x76\x88\xe3\xf4\x80\x2a\xe2\x4e\x00\x3f\x2d\x84\x46\xe1\x9b\x9c\x0e\x09\xc6\x61\xa5\x15\x4d\x3c\x42\x7c\x95\xdd\xfd\x21\xb6\x61\x24\x81\x9d\x94\x92\x9e\x50\xaf\x2b\x50\xd6\x41\x90\xaf\x66\xf0\xcb\x2f\x5a\x67\xd9\x1b\x7e\x0e\xde\x9c\x01\x57\x2d\x86\x47\xc7\xee\x15\x2e\xf3\xde\x20\xbb\xb5\xdd\x36\x27\x53\x20\x9c\xeb\x3c\x84\x6a\x2f\x94\x63\xcf\x80\xc2\x71\x7b\x50\xe2\x0a\x0b\x3c\x98\xcd\xcb\x91\xca\xf1\x52\x62\xe7\xd9\x41\xc6\x56\x36\x00\x6c\x3f\xf5\x73\x7a\x26\x51\x74\x62\x12\x72\x92\xa8\x32\xab\x3a\xd5\xdd\xd4\x27\xfa\xc0\x0e\x18\x4c\xd2\x17\x3a\xfc\x48\x5d\x88\x15\xa8\xaa\x76\xa8\x38\xe4\x29\x47\x9c\xf7\xd6\xe4\x85\x52\x1a\xc2\x9a\xe2\x1e\xd1\x3b\x5c\x7e\xee\x7a\x1f\xbf\x9a\x14\xdc\xc6\x54\xa6\x5e\xe6\x5b\x09\xfc\x2a\x4a\x72\xbd\xdd\x3b\xd3\x3f\xa9\xf7\xf1\xca\xb5\x8e\x1c\x06\x66\x80\xd1\x5f\xc6\xdd\x7f\xe0\xa0\xbb\xcf\x73\x06\x51\x51\xe0\x46\x2c\x9c\xab\x2d\x3b\xf2\x02\xbf\x53\xaf\xe7\x50\xe2\x56\xf8\xcf\xaa\x3f\x8a\x1d\xba\xce\xcb\x2e\x21\x75\xf7\x1b\x67\x76\xaf\xf8\xb5\x17\xef\x91\x40\xb0\x02\xdf\xa5\xfc\x65\xcd\x4a\x5c\x7d\x43\xd5\x31\xb2\xa2\x6f\x02\x5a\xd1\xdd\x43\x3a\xcf\xf3\x97\xb8\xc2\x35\xa6\x22\x97\x49\x39\x95\xa7\x39\xf4\x5a\x1d\x47\x67\x11\x90\x74\x2e\x4e\xdd\xec\x1a\xbf\x5e\x65\xb7\x8c\x0a\x44\x28\xe6\x99\x4a\x4b\x33\xcf\x40\xbc\xed\x35\xac\x4f\x8a\x88\xf3\x39\x60\xf9\xe8\x47\xc7\xd6\x22\x81\x15\xbc\x5d\x02\x81\x5f\x01\x71\x9e\x57\x98\xde\x89\xfb\x25\x90\x57\xaf\x52\xe1\x46\x9c\xaf\xc9\x06\x56\xab\x55\xdf\xa4\xdd\x5a\xce\xf3\xb6\xa9\x48\x81\xa7\x64\x0e\xff\x9c\x0d\xc3\x89\xe7\x7a\x17\x02\x2f\x53\x5b\x85\x87\x8b\x80\xed\x53\x51\x0b\x09\xc8\x3b\x16\x7b\x77\x1a\xd7\xad\xf8\x97\x23\x5f\x99\x7f\x35\x12\x9d\x25\x67\xfd\xd8\x9f\x6f\x6e\x24\xea\xea\xc1\xb0\xe7\xac\x06\x04\x14\x23\xfe\x5a\x59\x7d\xbd\xe7\x04\xd3\xb2\x3a\x81\x67\x56\xb6\xd9\x08\x5a\xc1\x8f\x85\x38\x72\x0c\x82\x01\x92\x56\xfe\xfb\xc9\xa9\x87\x2a\x39\xc0\xef\x27\xc8\xa4\xdd\x6c\x0e\x88\xea\x0d\x80\xbf\x88\xb8\x87\x2c\x83\x03\x3e\xc9\xf1\x1c\x37\x1c\xb7\x98\x8a\x16\xc4\x3d\x36\x2d\x99\x8a\x85\xed\x7e\x6e\x6c\x9e\x8c\xbc\x12\x32\x31\x53\x3d\xa8\x3b\x53\xaf\x0d\x21\x7a\xaa\xb0\x82\x7f\xfd\xf9\xc7\x7f\xf2\x06\xf1\x16\x4f\xd5\x63\x2b\x38\xa1\x77\x64\x7f\x0a\x4c\x76\x71\xb4\x79\xa8\x3c\x24\x14\x12\xd3\x46\x53\xcb\x36\xc0\x29\xad\xe5\xb3\xcf\xcc\xb6\xb7\x6b\x8e\xed\xbd\x6d\xe7\xfb\x3d\xa0\xaa\x30\x58\x85\x7d\xf2\xb2\x07\xce\x9d\x74\x9d\x49\xe0\xf3\x09\x45\x96\x83\x9c\x7b\xa0\x9b\x37\x40\x29\x4e\x03\x0d\x7d\xa1\xc3\x1e\x79\x18\x5d\xdb\xe5\x2d\xe3\x62\x5a\x92\xb6\xa9\xd0\xe9\x0f\x5e\x62\x7e\xcb\xea\x06\x71\xd5\x53\x2c\x83\xd2\x89\x6e\x38\xec\x1e\xa7\x07\x4f\xd1\x1c\x76\xbe\xeb\x06\x83\x50\xde\x0d\xd8\x32\x39\x02\x9e\x9e\xe0\xed\x0c\x5e\xc3\x74\x97\x12\x2c\x93\xf0\x43\xda\x0f\x75\x23\x4e\x71\xc3\x6b\xf7\xfa\x20\x37\x3a\x12\xc2\x20\x54\x9f\x63\x1f\x5d\xc5\xc7\x13\xc7\x31\x4d\x27\x90\xc9\x5d\x5f\xa4\x0f\x26\xee\xa2\xa8\x3b\x81\xca\x55\xae\xfd\xec\xb2\x6b\x30\xd4\x27\x97\x62\xc6\x74\xef\x08\x4e\x36\x96\xb5\x67\xdd\x69\xae\x8d\xa1\xa8\xb3\x91\xe9\x65\xe2\x58\xfb\x96\x53\x90\xfb\xe6\x0d\x7c\xe6\xac\x66\x32\x5f\x27\xad\x59\x0c\xa1\x82\x49\x60\xb1\x83\xcb\x4e\xd2\xef\x0b\x3d\x3a\x90\xeb\xe9\x56\x3f\xdc\xb5\x76\x01\x93\x2b\xea\x74\xd7\x64\xd3\xef\x51\xc1\xb6\x0d\x8d\xeb\x4e\xfa\x4d\x43\x4f\xbd\x2b\x5e\xdd\xbe\x8c\x6d\x7d\x7b\x6a\x75\xaf\xc6\x27\x7d\x5b\xb5\x29\xd4\x61\xb7\x22\x44\x89\xd9\x1b\xfc\x62\xbe\xc0\x76\x29\xee\x25\x14\xd2\xa1\xb6\x41\x75\x6b\xd0\x17\x5e\x49\x2c\x89\xb1\xca\xa5\x4b\x96\x84\xc6\xcb\xa8\x12\x6d\xc5\x08\x08\x82\xc4\xd9\x3a\xb8\x74\x8d\x95\x6c\xb9\xe9\x87\xe5\x20\x93\xa2\x0b\x8c\xa8\x48\x33\x45\xb4\xd2\xc8\x30\xd7\xfe\x6c\x22\x0d\xdb\x07\xdb\x37\x78\x1c\x1a\xf2\xa5\xfd\x65\xdb\x8b\x5c\x5b\xf0\xe3\x6e\x3a\xcc\xa4\xd6\x6a\x8f\x47\x89\x07\x48\xed\x30\x83\x1a\x0d\x55\xb6\xa9\x96\x69\x1d\xf0\x98\xfa\xdd\x7b\xe3\xc6\x8d\xe0\xc9\x98\xe8\x3e\x5b\x14\x52\xb7\x89\xad\x47\x7c\xbd\xf4\x08\x99\x66\x05\x64\x99\xe8\x15\x3d\x67\xdd\xcf\x06\x5f\x70\x71\xe4\x2d\x79\xc0\xd5\xa9\xeb\x82\x01\x3f\x60\x7e\xf2\x37\x79\xb2\x9d\x40\xc3\xf1\x9e\xfc\xc8\x43\xfa\xd0\x51\xaf\xe3\x03\x53\x77\x48\xac\x55\x0b\x9e\xb1\xdd\x77\x5c\x88\xac\x57\xb0\x01\xb9\xd5\x43\xb7\x02\x9d\xad\x83\xb6\xa5\x37\x34\x93\x27\xd1\x83\x3c\xc7\xf1\x77\x62\xfa\x56\x8b\xb6\xbd\x19\xe2\x80\xaf\x0f\x03\x88\x5b\x30\x2a\x08\x8d\xcf\x29\xd0\x3f\xf1\xa8\x90\xaf\x0f\x1b\x9b\x70\xf2\xcb\x18\x04\x33\x2d\x47\xb0\x2d\x51\xf4\x0b\x53\xc5\xba\xd4\x75\x79\x19\x90\xcd\xd4\x41\x9d\xec\x8e\x02\x6b\x9a\x42\xc6\x44\xc9\x8a\xa3\x3c\x34\xd9\x5c\x95\x3d\xe1\x3d\x76\x24\xd6\x4a\x49\x9e\xe4\xfd\x7e\x8a\xc5\x05\xe0\x59\xd1\x85\xe7\x0b\x2d\x28\xa5\x19\xff\x22\x35\x0e\x52\x62\x8f\xd4\x35\x1f\x7a\xb7\xec\xe6\x5a\x18\x9e\x9e\xfa\xbc\x9c\x52\xce\x92\xa9\xd1\xa5\x85\x1a\xb1\xce\xbc\x21\xb2\x18\xff\x31\x90\x01\xce\x21\x4b\xd0\x2f\xec\x25\xb5\xdc\x8e\x2c\x03\xd2\x02\xaa\x2a\xf6\x57\xea\x3e\x29\xe8\x84\x56\x5e\x78\xd7\xa1\xd5\x44\xa6\xca\xa9\xdd\xd0\xf4\xcd\xb8\xf9\x8c\x9a\xa2\x77\x39\xee\x7f\xec\x85\xb6\x6c\x1e\xe7\x83\x6a\xf6\x2e\x5b\xf5\xa0\xc3\x7a\xce\x8b\x05\x3c\x9e\x87\xf5\xdc\x7d\x77\x52\xe5\x3c\xaa\x44\xcd\x0a\xf3\x6b\xbd\xd1\x60\x27\x74\x75\x60\x38\x69\x98\x4a\xb6\x66\xa3\x4d\xec\x72\x33\x0d\xd5\x70\xa9\xe5\xa9\xf3\x14\x41\x41\x9f\xa4\xf2\x34\x4d\x41\xb0\x03\x01\x53\xa5\x39\x0a\x46\x9c\xe7\xe0\x32\xff\x04\x7a\xd7\x29\x2d\x11\x03\x8b\xdb\xe6\xf7\xfa\xa8\x39\xcb\x03\x70\x72\x5f\x02\x9d\x64\xe3\x04\xe6\x77\x26\x2b\xb6\x88\x62\x87\x74\x37\x3b\xf0\xeb\x4a\x9e\xe7\x92\x57\xae\xf5\x5a\xff\xf3\x45\x1b\xde\x9b\x42\xd7\x9a\xfd\x3f\x00\x00\xff\xff\xe4\x75\x86\x68\xe5\x27\x00\x00")

func staticBleveMappingJsMappingTypeMappingJsBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingJsMappingTypeMappingJs,
		"static-bleve-mapping/js/mapping/type-mapping.js",
	)
}

func staticBleveMappingJsMappingTypeMappingJs() (*asset, error) {
	bytes, err := staticBleveMappingJsMappingTypeMappingJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/js/mapping/type-mapping.js", size: 10213, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisAnalyzerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xcd\x8e\xdb\x36\x10\xbe\xfb\x29\x18\xa2\x07\xef\x41\x71\xd2\x5c\x25\x01\xc1\x02\xbd\x65\x7b\x68\xef\x05\x25\x8e\x25\x62\x29\x52\x20\x29\x27\xce\x62\xdf\xbd\x20\x29\x4b\xa4\xc4\x55\xbd\x89\x8b\xed\xa1\x3e\xec\xd2\xe2\xcc\x37\x7f\xdf\xcc\x58\x39\x65\x27\x54\x73\xa2\x75\x81\x2b\x0e\x27\xf8\x22\x29\xe1\xb8\xdc\xed\xc2\x9b\xce\x3e\xcc\x5a\x20\x14\x14\x2e\x77\x08\x21\x94\xb7\x9f\xe2\x5b\xc3\x0c\x07\x5c\xde\x0f\xda\xc8\x0e\x7d\x16\x84\x9f\xbf\x83\xca\x0f\xed\xa7\x72\x97\x1f\x28\x3b\x25\x31\x2b\x49\xcf\x17\x44\x7b\x29\x9a\x4c\xb7\xf2\x6b\x81\x41\x29\xa9\xbe\x80\xd6\xa4\x01\xec\xee\xdd\x67\x54\x26\x1c\x94\x41\xee\x6f\x46\x89\x68\x40\x59\xcd\x9a\x4b\xf2\x18\x08\x2b\xc9\x61\x94\xc5\x25\x7a\x7a\x0a\x31\x9f\x9f\xbd\xd1\xd1\x33\x77\x3e\x4a\xd5\x5d\x2c\xd8\x33\x1e\x11\xdc\xb9\x9c\x70\xc3\x28\xec\x55\xd6\x28\x39\xf4\x81\x80\x13\xe2\xa4\x02\x8e\x8e\x52\x15\x98\x08\xd2\x01\x2e\x1f\x48\x07\xf9\xc1\x3d\x5f\xc8\x32\xd1\x0f\xc6\x46\x40\x99\x26\x15\x07\x5a\xe0\x13\x83\xaf\xbf\x0b\x7e\xf6\xf5\x88\xc4\xc7\x8f\x68\xb2\x4e\x52\xe0\x05\x76\xf0\xc8\x9c\x7b\x28\xb0\x81\x6f\x26\x29\x1e\x3a\x5c\x4b\x61\x94\xe4\x18\x31\x5a\x60\xe3\xd5\x7b\x4e\x6a\x68\x25\xa7\xa0\x0a\xfc\xe0\x1c\x9e\x23\x0e\xb2\x74\x65\x06\x7c\xfc\xe5\x7d\x4b\x14\xa9\x0d\x28\xf4\x1b\xe3\x06\x94\x4e\x24\x20\x1f\xf8\x05\x8c\x33\x6d\x46\xb0\xdd\x2a\x5a\x4f\x0c\x32\x32\xeb\x7d\xdd\x12\xf5\xd7\xd1\xa3\xbe\xe7\x20\x1a\xd3\xa2\x1c\x7d\x5c\xd5\x81\xad\xc1\x33\x66\xa0\xc3\xe5\x83\x14\xb6\x20\x2c\x72\xe6\x30\xfc\x5b\xce\x95\xe8\xc3\x52\x71\x60\x99\x96\xca\xd8\x9a\xaf\x21\xc7\xea\x26\x31\xaf\x8f\x72\xc5\x05\xd1\x64\x0a\x7a\x20\x66\x86\xb6\x55\xf2\xf5\x41\x4c\xa0\xa4\x41\x64\x14\xa9\x1f\x51\x75\x46\xbf\x30\x41\xe1\xdb\xc2\x01\x84\x72\xdd\x13\x71\x71\xa2\xe1\xe7\xbe\x65\xb5\x14\x68\x3a\x65\x1d\x13\x83\xc6\x65\x7e\xb0\x82\xb6\x1d\x51\xc2\xfc\xd8\x96\x4b\x58\xd1\x64\xec\x58\xe0\x77\xff\xdc\x15\x7e\x0e\xb0\xfa\xb1\xc0\x0a\x3a\x79\x82\x19\x7c\xef\x3d\xbf\x4b\xeb\x6d\x78\xee\x81\x50\x3f\x70\x9e\x29\xd6\xb4\x66\x8a\x22\x2e\xc2\x26\x95\x92\x3d\x74\x4d\x5c\x57\xf5\x59\xaa\xad\x82\x26\xad\x25\xcf\x74\x97\x7d\xfc\xb0\xe4\x8d\x06\x0e\xb5\x1b\x3d\x75\x6b\xe7\x68\x81\x09\xa5\x73\xca\xee\xdd\x43\xba\x7f\x21\x67\x01\x49\xbd\x96\x6b\x75\xaf\xea\x46\xc8\x56\xa6\xa3\x49\x94\x14\xb4\xd3\x69\x0d\xbc\xe4\x3e\x42\xb9\xec\x0d\x93\x22\x64\x76\x1d\x31\x7a\xfe\x66\xbd\xd2\xb8\x7c\x7a\x9a\x1f\x3d\x3f\xe7\x07\x0f\xb0\x2c\xa7\x4f\x4e\x5c\x52\x57\xc4\xcd\x24\xff\xba\xcc\x71\x35\x18\xe3\xbd\x1b\x89\x19\xa5\x78\x6f\x5a\xa6\xef\x2e\xe3\xdb\xcb\x6e\xe6\xad\x32\x02\x55\x46\x64\x14\x8e\x64\xe0\x26\xa2\xe5\x67\x4a\xf3\x83\xc7\xd8\x70\xfb\x87\xc7\xf9\xb4\xce\x5c\xdb\xfe\x29\x1f\x41\xb0\xef\xf6\x27\xc1\x74\x4c\xf1\x70\xe6\xd8\x2b\xd6\x5b\xc0\x48\x73\x01\xdf\x64\x63\x62\x60\x4e\x8a\x29\xf9\x2b\x59\xe8\x38\xb8\x0e\x38\xae\xf0\x9a\x7f\x93\x69\x4b\xbf\xe9\xcb\xc4\xbe\xe9\x49\x9a\x7c\x6b\xea\xfd\xf8\x06\x76\x4e\xdf\x7e\xfb\xba\x08\xfe\xb3\xeb\x37\xe9\xdd\xcf\xee\xdf\x08\xf4\xb6\x0b\xd8\x15\x29\xb1\x81\xb7\x4c\xfe\xd4\xca\x0d\x0d\xde\x7e\xe7\x06\xe8\xff\x2f\xdd\x2b\x97\x6e\x90\xb3\xd7\x6c\xdd\x40\xed\x76\x1b\x37\x00\xbd\x6a\xdb\x9a\x98\xbe\x26\xf6\x69\x9e\x78\x6f\xb8\x70\x43\x4a\xbe\xd9\xc6\xf5\x47\x5b\x86\xad\x77\xe2\xa3\x94\x66\x7e\xcf\x9e\x83\xb1\xa4\x8d\x39\xfb\x82\x83\x71\x30\x73\x1a\x6a\x22\x6a\xe0\xfb\x3b\x5c\xde\x73\xa9\x21\xf6\x7b\x61\xe8\xdd\xad\x2c\xb9\xd3\x6b\x4c\xbd\x00\x59\x0d\x8c\xd3\xbd\x7d\x57\x5d\xb4\x45\x54\xc6\xa5\x9f\xbd\x62\x1d\x51\xe7\xa8\x64\x7f\x90\x53\x10\xfb\x54\x07\xff\xff\xef\x00\x00\x00\xff\xff\x79\xcf\xbe\x8c\x11\x11\x00\x00")

func staticBleveMappingPartialsAnalysisAnalyzerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisAnalyzerHtml,
		"static-bleve-mapping/partials/analysis/analyzer.html",
	)
}

func staticBleveMappingPartialsAnalysisAnalyzerHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisAnalyzerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/analyzer.html", size: 4369, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisAnalyzersHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8b\xdb\x30\x10\xbd\xef\xaf\x98\xce\x69\x03\xeb\x98\xf6\x2c\x1b\x0a\xed\x71\xd3\x53\x7f\xc0\x24\x9a\xd8\x62\x15\xc9\x48\xe3\x24\xee\xb2\xff\xbd\xc8\x8e\x3f\xb2\x0d\x0d\x2d\xa5\x39\x84\xa7\x41\x7a\xf3\xf4\x46\xcf\x4a\x68\x6b\x19\x76\x96\x62\x2c\x70\x58\xf4\xff\x59\x94\x60\x1a\xd6\x58\x3e\x00\x28\xa9\x99\x74\x42\x09\x87\x01\xf4\xe5\x72\x43\x07\x56\xb9\xd4\xcb\xda\xbc\x56\xf9\xb0\x3b\x55\x2e\x0c\x4a\xb6\x5e\x77\x13\x17\xb8\x2a\x0b\xdc\x30\x49\x81\x8f\xe4\xe8\xc0\x4f\x74\x24\xbb\x02\xe3\xc0\x38\xcd\xe7\x67\x6a\x1a\xe3\xaa\x35\x39\xb2\x5d\x34\x71\x00\x3f\x38\x44\x9c\x7b\xea\x52\x51\x62\xda\x59\xb3\x7b\x29\x90\xb5\x91\xcf\x97\x6d\x17\x52\x48\xac\x4f\x20\xa1\xe5\x15\x96\xaf\xaf\x7d\xf5\xed\x4d\xe5\x94\xe4\xea\x25\xd5\x05\x02\x28\x6d\x8e\xa3\x35\x5b\x71\x59\x15\x7c\xdb\xc0\x84\xb2\x73\x44\x08\xde\x72\x81\xfd\x1a\xe7\x93\x00\x6a\xdb\x8a\x78\x97\x44\x99\x7d\x81\x1f\x8e\x86\x4f\xdf\x9c\xed\x9e\xbd\x26\x8b\x8b\x8d\xe3\xef\xbe\xfa\x15\x82\x74\x0d\x17\x38\x50\xdf\x22\x99\xc5\xf6\x32\x35\xef\xa9\xb5\xd2\xe3\x73\xbc\xd2\x07\xa0\x62\x43\x6e\x3c\x51\xd9\xae\xa9\xcd\xce\x3b\x98\x50\x96\x74\xdc\x6a\x42\xc1\x50\x56\x1b\xad\xd9\x15\x98\x0c\xc5\x52\xe5\x89\xac\x84\xaf\xda\xc8\xd2\x84\x7c\x90\xfa\x8f\x8c\xd1\x6c\x59\xf8\xda\x9a\xff\x6d\x8a\x04\x8a\xf5\x1f\xba\xf2\xa5\xd7\xfd\x5b\x5f\x54\xae\xcd\x71\x7a\x84\xd3\x83\x1c\xf3\x33\x45\x25\xd6\xfe\x54\xe0\x77\x31\x36\xae\x5f\xb8\x8b\x8f\x77\x32\xb2\x5a\x5b\x76\x95\xd4\xa0\xe0\xe3\x32\x2f\xb0\xf3\x36\x89\x2b\xf0\x13\x96\x1b\xef\xf8\xd7\x9e\x2a\x9f\x92\xaa\x64\xef\xbd\xdc\xc8\xff\x35\xcf\xc3\x5f\xce\x78\x9e\xb0\xe3\xd3\x34\xde\xbb\x93\x7d\x37\xd7\x78\xb8\x1a\x6f\xd3\x5a\x9b\x05\x53\xd5\x82\xe5\x86\x4f\x30\xf2\xbe\xf7\xfe\xe6\xc5\x87\xeb\xaa\xbc\xff\x14\x96\x0f\x3f\x03\x00\x00\xff\xff\xd9\xa5\x25\x52\x26\x05\x00\x00")

func staticBleveMappingPartialsAnalysisAnalyzersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisAnalyzersHtml,
		"static-bleve-mapping/partials/analysis/analyzers.html",
	)
}

func staticBleveMappingPartialsAnalysisAnalyzersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisAnalyzersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/analyzers.html", size: 1318, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfilterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xdb\x3a\x10\xbc\xfb\x2b\xf8\xf6\x94\x1c\xf4\x84\x36\x57\x89\x17\x03\xbd\x25\x3d\xb4\x3f\x40\x91\x2b\x89\xc8\x8a\x14\x48\xca\xa9\x61\xf8\xdf\x0b\x92\x8a\x2d\x2b\x72\x81\x14\xd5\x21\xa1\x77\x87\xb3\xb3\xc3\x25\x2b\xa5\x0f\x4c\x92\xf0\xbe\x86\x86\xf0\x80\xcf\x56\x09\x02\xbe\xdb\x2d\x33\x43\x0c\x16\x3d\x0a\x85\x0e\xf8\x8e\x31\xc6\xaa\xfe\xe9\x36\x1b\x74\x20\x04\xbe\x9f\x7c\xb0\x03\xdb\xf7\xc2\xb1\x6f\x9a\x02\xba\xaa\xec\x9f\xf8\xae\x2a\x95\x3e\x6c\xd2\x36\x56\x1d\xdf\x49\x63\xd2\x74\x85\xef\xed\x5b\x0d\xe8\x9c\x75\xcf\xe8\xbd\xe8\x10\x52\x3e\x7d\xf3\x66\x41\xe8\x02\x4b\x7f\x0b\x25\x4c\x87\x2e\xee\x94\x64\xc5\xeb\x02\xec\x2c\xe1\x8c\x05\xce\x4e\xa7\x25\xe7\xf9\x9c\x8b\xce\xca\xd2\xba\xb5\x6e\x78\xaf\x10\xd7\x30\x33\xa4\x35\xbf\xf0\x2e\xbb\x88\xa9\xa2\x73\x76\x1a\x17\x80\x04\x22\xd1\x20\xb1\xd6\xba\x1a\x82\x11\x03\x02\x7f\x11\x03\x56\x65\x8a\xaf\xb0\xda\x8c\x53\x88\x1d\x28\xed\x45\x43\xa8\x6a\x38\x68\x7c\xfb\x6e\xe8\x98\x8f\xe4\x06\x3e\x7f\xa6\x2b\x06\xab\x90\x6a\x48\xf4\x2c\x1c\x47\xac\x21\xe0\xaf\xb0\x09\x5f\x0a\x96\xd6\x04\x67\x09\x98\x56\xef\xea\xd8\x48\x42\x62\x6f\x49\xa1\xab\xe1\x25\x09\xbe\x76\xbc\x70\xe9\xaf\x1c\x90\xbd\x70\x6d\x1a\x88\xa8\x12\xf8\xcf\xe3\x78\xc7\x8a\x05\xb3\xb4\x54\xf8\xa1\xf8\xf2\x95\x25\x7f\xb6\x8b\x78\x24\x94\x9f\xf6\x2e\x4d\x4b\x1f\x07\x27\x6b\xcb\xc3\x1a\x55\xed\x53\xf4\xe1\xf1\xee\xb6\xd9\xf3\x6b\x47\xff\xa7\x96\x36\xe1\x5b\x9e\x6f\x02\xe3\x39\xac\x3d\xfa\x00\xac\xec\x18\xb4\x35\x51\x84\xc3\x11\x45\x58\x69\x67\xda\xb0\xdb\x66\x3c\xf0\xd3\xe9\x26\x74\x3e\x57\x65\xa6\x59\xf9\x58\x66\x23\xd7\xd1\x74\xee\xab\x9f\xb7\x63\x70\xb9\xb1\x6b\x47\x62\x46\x1b\x49\x93\x42\xe6\x9d\xcc\x36\x8c\x22\xf4\x50\xce\x17\xbe\x8c\x91\x3f\xbd\x0e\xad\xb5\xe1\xfa\xe8\x34\x53\x08\xb9\x7d\xdd\xae\x0f\xf9\xf2\x8c\x05\xc3\x9a\x60\x0a\x85\xad\x98\x68\x75\x13\xd2\x13\xa1\xe5\x6b\x0d\x52\x18\x89\xf4\xf0\x08\x7c\x4f\xd6\x63\x55\x66\xee\xcd\x42\xff\xfd\xab\x4a\x69\xf5\x99\x52\x77\x28\x9b\x49\x93\x7a\x88\xb7\x76\x35\xa5\xf9\x05\xc8\x94\x1f\x74\x8e\x4e\x0f\xc2\x1d\xd9\x38\x11\x15\x4e\x77\x7d\x00\xfe\x43\x1c\x16\xbd\x5f\xce\x21\xff\xff\x1d\x00\x00\xff\xff\x05\x8e\x0c\x15\x1e\x06\x00\x00")

func staticBleveMappingPartialsAnalysisCharfilterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfilterHtml,
		"static-bleve-mapping/partials/analysis/charfilter.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfilterHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfilterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilter.html", size: 1566, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfiltersGenericHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func staticBleveMappingPartialsAnalysisCharfiltersGenericHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfiltersGenericHtml,
		"static-bleve-mapping/partials/analysis/charfilters/generic.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfiltersGenericHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfiltersGenericHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xb1\x6a\xc4\x30\x0c\x40\xf7\x7c\x85\xd0\x9e\xde\x0f\xc4\xd9\x3a\x96\xc2\xfd\x81\x2f\x56\x7c\x06\xc5\x32\xb2\x93\xe6\xfe\xbe\xd4\x09\xb4\x07\xa1\xcb\x11\x4d\x1e\xe4\xf7\xd0\x03\x00\xe8\x5c\x58\x60\x60\x9b\xb3\xc1\x51\x74\x6a\xbd\xca\x9c\xb0\x6f\x60\x9f\x8e\xed\x8d\x18\x46\x51\x83\xc3\xdd\xea\x18\xb8\x90\x5e\xc9\xd3\x9a\xb0\xbf\x92\x9f\xd9\x2a\xbc\xaf\x49\x29\xe7\x20\xb1\xbb\xd4\x0f\xbf\x80\x0a\x09\x31\xcd\x05\xa2\x6f\x5d\xc8\xf6\xc6\xe4\x0c\x2e\x81\xbe\x3e\x23\x3f\x3e\xc4\x59\xc6\xa7\xf5\x7d\xa2\x6f\x27\x71\xc4\x7f\xc5\x6f\xba\x99\x8f\xf6\xcb\x23\x91\xc1\x42\x6b\xc1\xa7\x93\x06\x89\x45\xe5\xd8\x11\xdc\xc1\x59\x90\xd8\x0e\x74\x17\x76\xa4\x06\xf7\x18\xdd\xc5\x85\xa5\x6f\x9a\x97\xaa\x55\xf0\x4f\xb6\xfa\x98\x28\x96\xf3\x7b\x6d\xce\xb3\x82\x6d\xf4\x7f\x8a\x7d\x07\x00\x00\xff\xff\x9a\x37\xb9\x1d\x66\x02\x00\x00")

func staticBleveMappingPartialsAnalysisCharfiltersRegexpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml,
		"static-bleve-mapping/partials/analysis/charfilters/regexp.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfiltersRegexpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilters/regexp.html", size: 614, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisCharfiltersHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\x39\x6d\xa4\x75\xac\xaa\x57\xec\x4b\x3f\x6e\x9b\x5e\xda\x73\x35\x31\x63\x1b\x2d\x01\x04\x93\x0f\x6b\xb5\xff\xbd\x02\x6f\x1c\x67\x13\x75\xdb\xaa\x6a\x0e\xd1\x63\x0c\x8f\xc7\x7b\x0c\x92\x71\x63\x08\x1a\x83\x31\x56\x62\x1c\xe4\xff\x22\x72\xd0\x9e\x94\xa8\x17\x00\x92\x7b\x42\x95\x50\xc2\x61\x04\xb9\x5c\xaf\x71\x4b\xb2\xe4\x7e\x5e\xfb\x36\xf8\xab\xda\x79\x2c\xcb\x91\x21\x55\x5e\x58\x25\x6f\x9c\x1a\x26\x7e\xb0\x5d\x11\xc8\x13\x72\x25\xee\x9a\xd6\xe2\x96\xee\x9b\x76\x8f\x66\x09\xda\x82\xb6\x8a\x8e\x0f\xe8\xbd\xb6\xdd\x0a\x2d\x9a\x21\xea\xb8\x6a\x7a\x0c\x3f\x5a\x6d\x98\x42\x14\xe7\x8d\x55\x2d\x31\xd1\x35\x46\x37\x8f\x95\x20\xa5\xf9\x63\x8f\xe1\x4b\x9e\x78\xe2\x86\x4c\x7e\x0f\x1c\x76\xb4\x14\xf5\xd3\xd3\x58\x7f\x7e\x96\x25\x26\xe1\x6a\xce\x97\xbe\xee\xd1\xac\x78\xf0\x79\xc6\xe5\xd7\x17\x08\x20\x95\xde\x9f\x6c\xdd\xb0\x2d\xba\xe0\x76\x1e\x26\x54\x1c\xa3\x80\xe0\x0c\x55\x22\x8f\xc5\x79\x25\x80\xdc\xec\x98\x9d\x4d\xba\x75\x5b\x89\x77\x7b\x4d\x87\xaf\xd6\x0c\x0f\x4e\xa1\x11\xb3\x89\xa7\xdf\xef\x1d\x70\x29\x20\x89\xae\xc4\x48\x7f\x8b\xe8\x2c\x38\x4b\x55\xd4\xe2\xce\x70\xc6\xc7\x78\xa1\x11\x40\x46\x8f\xf6\xb4\xa2\x33\x83\xef\x75\xe3\x2c\x4c\xa8\x48\x5a\x6e\x6d\x82\x41\x63\xd1\x6b\xa5\xc8\x56\x22\x79\x2e\x6a\x59\x26\xb2\x1a\x3e\x2b\xcd\x73\x23\xca\x51\xea\x3f\x32\x47\x91\x21\xa6\x2b\x7b\xfe\xb7\x2f\x1c\x30\xf6\x7f\x68\xcc\xa7\x2c\xfd\x97\xd6\xc8\x52\xe9\xfd\x74\x17\xa7\x7b\x79\x6a\xb7\xa9\xb3\x62\xef\x0e\x95\xf8\xce\xda\xc4\xd5\x23\x0d\xf1\xee\xed\x86\x5a\xae\x0c\xd9\x8e\x7b\x90\xf0\x7e\xde\x5c\xd0\x38\x93\xf4\x55\xe2\x83\xa8\xd7\xce\xd2\xf5\xb6\xb2\x9c\x7a\x5b\x72\xeb\x1c\xdf\x78\x45\x2e\x79\x16\x7f\x99\xf4\x39\x67\x4b\x87\x59\xc8\x6f\xc6\xfb\x2a\xdc\xb8\xbd\xc8\xd8\xef\x8c\x29\x82\xee\x7a\x16\xf5\x9a\x0e\x90\x98\xb1\x61\x0a\x30\xf2\xbf\x0e\xe2\xa6\x05\xe3\xc1\x65\x99\x9f\xd6\x7a\xf1\x33\x00\x00\xff\xff\xcb\x3b\x71\x01\x76\x05\x00\x00")

func staticBleveMappingPartialsAnalysisCharfiltersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisCharfiltersHtml,
		"static-bleve-mapping/partials/analysis/charfilters.html",
	)
}

func staticBleveMappingPartialsAnalysisCharfiltersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisCharfiltersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/charfilters.html", size: 1398, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfilterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xdb\x3c\x0c\xbe\xe7\x29\xf4\xeb\x94\x1e\xfc\x1b\x5b\xaf\xb6\x2f\x01\x76\x6b\x77\x58\x5f\x40\x96\x68\x5b\x08\x2d\x19\x12\x9d\x2e\x08\xf2\xee\x83\x24\x27\xb5\x9d\x64\x58\x87\xf9\xd0\x2a\x24\xf5\xf1\xe3\x47\x8a\x85\xd2\x07\x26\x51\x78\x5f\xf2\x1a\xe1\x00\x2f\x56\x09\xe4\xd5\x66\x33\xf7\xf4\xc1\x98\x75\x20\x14\x38\x5e\x6d\x18\x63\xac\xe8\x9e\x97\x5e\xd2\x84\xc0\xab\xdd\xe8\xc9\xf6\xec\xcd\xee\xc1\xb0\x6f\x1a\x09\x5c\x91\x77\xcf\xd5\xa6\xc8\x95\x3e\xdc\xc5\xad\xad\x3a\x5e\x50\x83\xd3\xb4\x99\xef\xec\x7b\xc9\xc1\x39\xeb\x5e\xc0\x7b\xd1\x02\x8f\xfe\xf8\x4d\x97\x05\x82\x23\x16\xff\x66\x4a\x98\x16\x5c\xb8\x29\xd1\x8a\xfd\x2c\xd8\x59\x84\x29\x96\x57\xec\x74\x9a\x63\x9e\xcf\x29\xe9\xc4\x2c\x9e\x1b\xeb\xfa\x4b\x86\x70\xe6\x13\x42\x3c\x57\x57\xdc\x79\x15\xc1\x95\xb5\xce\x8e\xc3\x2c\x20\x06\xa1\xa8\x01\x59\x63\x5d\xc9\xc9\x88\x1e\x78\xf5\x2a\x7a\x28\xf2\x68\x5f\xc5\x6a\x33\x8c\x14\x2a\x50\xda\x8b\x1a\x41\x95\xfc\xa0\xe1\xfd\xbb\xc1\x63\xea\xc9\x22\x7c\xfa\x4c\x9b\xf5\x56\x01\x96\x3c\xc2\x33\x3a\x0e\x50\x72\x82\x9f\xc4\x17\xec\xa4\x35\xe4\xec\x7d\x0c\xad\x2e\xec\xd8\x80\x42\x42\x67\x51\x81\x2b\xf9\x6b\x24\xfc\x51\xf1\x4c\xa5\xbf\x53\x20\x8c\x44\x13\x27\x22\xd0\xe4\xd5\xdb\x71\x78\xa0\xc5\x0c\x5a\x5a\xcc\x7c\x9f\x7d\xf9\xca\xa2\x40\xf7\xb3\x78\x40\x90\x9f\x16\x2f\x8e\x4b\x17\x26\x67\x22\x97\xc6\x35\xd0\xda\x45\xf3\xf6\xe9\xe1\xbd\x49\xf5\x59\x4d\xff\xc7\xa2\xee\xc6\xff\x69\x27\x52\x2b\xd6\x32\xdd\x44\x16\x76\x20\x6d\x4d\xa0\xe1\x60\x00\x41\x6b\xfa\x4c\x1b\xb6\x2a\xc8\xf3\xea\x74\x5a\xda\xce\xe7\x22\x4f\x48\x2b\x35\xf3\x24\xe7\xda\x1a\xdb\xbf\xfa\xb9\x9c\x86\xeb\xc3\xbd\x91\x25\xb8\xb4\x91\x38\x2a\x60\xde\xc9\xa4\xc5\x20\xa8\xe3\xf9\xf4\xf0\xf3\x60\xf9\xdd\x96\x68\xac\xa5\x8f\xed\x53\x8f\x44\x49\x02\xdd\xac\x7b\x7d\xdd\x67\x64\x58\x4d\x26\x53\xd0\x88\x11\x69\x29\x79\x5c\x15\x5a\xee\x4b\x2e\x85\x91\x80\xdb\x27\x5e\xed\xd0\x7a\x28\xf2\x84\x7d\x37\xd1\x7f\xff\x2a\x53\x3c\x7d\x26\xd5\x03\xc8\x7a\xd4\xa8\xb6\xe1\xf5\xae\x66\x35\x6d\x82\x04\x79\xc3\x73\x70\xba\x17\xee\xc8\x86\x11\x31\x73\xba\xed\x88\x57\x3f\xc4\x61\x56\xfb\xb5\x0f\xe9\xff\xaf\x00\x00\x00\xff\xff\x9e\x52\x1d\x9f\x27\x06\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfilterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfilterHtml,
		"static-bleve-mapping/partials/analysis/tokenfilter.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfilterHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfilterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilter.html", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6a\xc3\x40\x0c\x44\xef\xfd\x0a\xb1\x77\xd7\x3f\xb0\xf6\x1f\xb8\x3d\xb4\xd0\x63\x90\x2d\xd9\x88\xca\xab\x65\x77\xe3\x52\x42\xfe\xbd\x24\x8e\x8b\x4d\xa9\x4e\xc3\x30\x8f\xd1\x00\x00\x78\x92\x05\x06\xc5\x9c\x1b\x37\x5a\x9a\xab\x29\xd9\x39\xba\xf6\x09\x1e\xe7\x15\x7b\x56\x18\x2d\x35\xae\xd8\x27\x87\x51\xb4\x70\x7a\xbf\xc9\x0e\x63\x76\xed\xdb\xb9\x87\x0f\x4b\x94\x7d\x7d\xcf\xee\xd8\xcc\xca\x43\x81\x30\x55\x24\x19\x7b\x65\x6a\xdc\x22\xfc\xf5\x1a\xf4\xbb\x33\x42\x75\xbf\xd9\xed\xc2\x54\xcd\x46\xac\x87\xb6\x67\x92\xa1\x9c\xee\xc6\x69\xc6\xf8\x97\xda\x2f\x18\x2c\x94\x64\xea\x40\xe8\xbf\x97\x0f\xbc\xb7\x58\xc4\xc2\xad\x39\x71\x64\x2c\x0f\xaa\xc3\x08\x12\x60\xd3\x2f\x38\x73\x76\xed\xe5\xb2\x19\xd7\xab\xaf\x57\x74\xb7\xb8\x5e\x27\xaf\x8e\xaf\x49\x96\xf6\x27\x00\x00\xff\xff\x10\xcc\xc5\x07\x67\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html", size: 359, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xc1\x6e\x83\x30\x0c\x86\xef\x7d\x8a\xc8\x77\xd6\x17\x00\x0e\xbb\xa3\x3d\x83\x49\x0c\xb5\x30\x36\x0a\x81\xd1\xb7\x9f\x40\x95\x26\xa6\xa8\x97\xb5\x3e\xe4\xf4\x59\x7f\xfe\x4f\x76\xce\xb9\x32\xf0\xea\xbc\xe0\x3c\x57\xd0\x59\x1c\x8b\x3e\xda\x32\x41\x7d\x71\x8f\x29\x05\x5b\x12\xd7\x59\xac\x20\xd9\x40\xda\xb1\x24\x8a\x9f\xe8\x07\xa8\xf7\xb7\xbc\x1e\xc4\xef\xc6\xb1\xc5\x3a\x2d\xc9\x69\x5f\x04\x9e\xb1\x15\x0a\x15\xac\x4c\xdf\x5f\x2a\xf7\xc6\x02\x0a\x9c\xf0\xc7\x68\x5f\x8c\x16\x48\x4e\x49\x1f\xed\x1e\x95\xc3\xd3\x7d\xa2\x0a\xfc\x8d\xfc\xd0\xda\x96\x45\x38\x64\x7e\x7d\x80\xe5\x35\xf0\x5a\x5f\x2e\xff\x91\xd0\xb0\x42\xdd\xb0\xbe\x5d\xc1\xc8\xfa\xc4\x80\x2e\x63\x4b\x11\x4e\x0d\xbc\x69\x8a\x96\xcf\xf8\x23\x65\x6f\xe1\x26\x41\x4f\x37\x93\x40\xb1\x82\x57\x2a\xc2\x0d\xea\x06\xb7\xf7\x2b\xc2\xfc\x05\xbc\x46\x11\x6e\xcf\x14\xfd\x04\x00\x00\xff\xff\xf9\x6e\x5f\x86\x49\x03\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html", size: 841, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6a\xc4\x30\x0c\x44\xef\xfd\x0a\xa1\x7b\x9a\x1f\x70\x02\xfd\x80\xb4\x97\xde\x17\x6d\xac\x04\x51\xd9\x32\xb6\x9b\x52\x96\xfd\xf7\xb2\x9b\xa4\x64\x29\xd5\x69\x18\xe6\x31\x1a\x00\x00\xe7\x65\x81\x51\xa9\x94\x0e\x27\xcb\xa1\x99\xb3\x7d\x26\xec\x9f\x60\x3b\xa7\x74\x66\x85\xc9\x72\x87\xd5\x3e\x38\x4e\xa2\x95\xf3\xfb\x4d\x0e\x94\x0a\xf6\x2f\xb9\xca\xa8\x5c\x5c\x7b\x8f\x1e\xd0\xc2\xca\x63\x85\x38\x37\x5e\x0a\x9d\x95\x7d\x87\x8b\xf0\xd7\x5b\xd4\xef\xc1\x3c\x29\xfe\x66\xf7\x8b\x73\x13\xcc\xb3\x3e\x94\x3d\xd3\x56\x71\xba\x9b\xa7\x40\xe9\x2f\x79\x1c\x31\x5a\xac\xd9\x14\x41\xfc\x7f\x5f\x3f\xf0\xce\x52\x15\x8b\xb7\xf6\xcc\x89\xa9\x6e\xd4\x40\x09\x24\xc2\xae\x5f\x29\x70\xc1\xfe\x72\xd9\x8d\xeb\xd5\xb5\x2b\x7a\x58\xdd\xae\xb3\x57\xc7\xb5\x5e\x96\xfe\x27\x00\x00\xff\xff\x4d\xe0\x0e\x69\x6a\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersElisionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/elision.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersElisionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/elision.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersGenericHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/generic.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersGenericHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6a\xc3\x40\x0c\x44\xef\xfd\x0a\xb1\x77\xd7\x3f\xb0\xf6\x0f\x14\xb7\x97\xde\x83\x62\xc9\x46\x44\x5e\x2d\xbb\x5b\x87\x10\xf2\xef\x25\xb1\x5d\x1c\x4a\x74\x1a\x86\x79\x8c\x06\x00\xc0\x93\xcc\xd0\x2b\xe6\xdc\xb8\xc1\xd2\x54\x8d\xc9\x7e\xa2\x6b\xdf\x60\x3d\xaf\x78\x64\x85\xc1\x52\xe3\x8a\x9d\x38\x0c\xa2\x85\xd3\xf7\x5d\x76\x18\xb3\x6b\x3f\xf8\x72\xb6\x44\xd9\xd7\x8f\xe8\x0e\xcd\xac\xdc\x17\x08\x63\x45\x92\xf1\xa8\x4c\x8d\x9b\x85\xcf\x5f\x41\x2f\x9d\x11\xaa\xfb\xcb\x6e\x17\xc6\x6a\x32\x62\x7d\x2a\x7b\x3f\xad\x15\x87\x87\x79\x98\x30\xfe\x27\xf7\x23\x7a\x0b\x25\x99\x3a\x10\x7a\xf5\xf5\x13\xef\x2d\x16\xb1\x70\x6f\x4f\x1c\x19\xcb\x4a\x75\x18\x41\x02\x6c\xfa\x13\x27\xce\xae\xbd\x5e\x37\xe3\x76\xf3\xf5\x82\xee\x56\xd7\xcb\xec\xc5\xf1\x35\xc9\xdc\xfe\x06\x00\x00\xff\xff\xda\x20\xf1\xdb\x6a\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html", size: 362, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x51\x6a\x84\x50\x0c\x45\xff\x5d\x45\xc8\xbf\x9d\x0d\xf8\xdc\x81\x74\x0d\xd1\x44\x1b\x1a\x13\x79\x3e\xad\xb3\xfb\xc2\x20\x14\xe9\xd0\x9f\x32\xf7\x37\x37\x5c\xce\x01\x00\x68\x58\x77\x18\x8c\xd6\x35\xe1\x18\x79\xae\xa7\x1c\xdb\x82\x6d\x05\x67\x1a\xa3\x5e\x0c\xc6\xc8\x09\x4b\x7c\x8a\x8f\x6a\x45\x72\xa7\x8e\x6d\xa7\xde\xdc\x1e\xf7\x9f\xfe\xe3\x47\x7d\xd9\x0a\xf8\x54\xb3\xae\xd4\x9b\x70\xc2\x5d\xe5\xeb\xdd\xed\xde\x05\x93\xe1\xa5\x7e\xc6\xa7\x7a\x0e\x16\xbb\xec\xbc\xcd\xea\x4f\xdb\xe5\xbe\x48\x42\xdf\xe6\x5e\x32\x5e\x08\x86\xf0\x92\xe3\xf9\x86\xf2\x2f\x0a\x58\x8c\x06\xf9\x08\x63\xc9\x09\x4f\xf2\xe6\xc6\xba\xb7\x55\xf5\x2f\x45\x74\x60\xdb\xd1\xf1\x7a\x45\x74\xbc\x50\x11\x1d\x7f\x29\xfa\x0e\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersLengthHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/length.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersLengthHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/length.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x51\x6a\x84\x50\x0c\x45\xff\x5d\x45\xc8\xbf\x9d\x0d\xf8\xdc\x81\x74\x0d\xd1\x44\x1b\x1a\x13\x79\x3e\xad\xb3\xfb\xc2\x20\x14\xe9\xd0\x9f\x32\xf7\x37\x37\x5c\xce\x01\x00\x68\x58\x77\x18\x8c\xd6\x35\xe1\x18\x79\xae\xa7\x1c\xdb\x82\x6d\x05\x67\x1a\xa3\x5e\x0c\xc6\xc8\x09\x4b\x7c\x8a\x8f\x6a\x45\x72\xa7\x8e\x6d\xa7\xde\xdc\x1e\xf7\x9f\xfe\xe3\x47\x7d\xd9\x0a\xf8\x54\xb3\xae\xd4\x9b\x70\xc2\x5d\xe5\xeb\xdd\xed\xde\x05\x93\xe1\xa5\x7e\xc6\xa7\x7a\x0e\x16\xbb\xec\xbc\xcd\xea\x4f\xdb\xe5\xbe\x48\x42\xdf\xe6\x5e\x32\x5e\x08\x86\xf0\x92\xe3\xf9\x86\xf2\x2f\x0a\x58\x8c\x06\xf9\x08\x63\xc9\x09\x4f\xf2\xe6\xc6\xba\xb7\x55\xf5\x2f\x45\x74\x60\xdb\xd1\xf1\x7a\x45\x74\xbc\x50\x11\x1d\x7f\x29\xfa\x0e\x00\x00\xff\xff\x6f\xc7\x37\xc6\x44\x02\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersNgramHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersNgramHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/ngram.html", size: 580, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4e\x03\x31\x0c\x45\xf7\x9c\xc2\xca\x7e\x98\x0b\x64\xb2\x64\x07\xac\x38\x40\x1a\x3b\x23\x6b\x1c\xbb\x4a\xc2\x20\x38\x3d\xa2\x1d\x09\x2a\xda\x6a\xfe\xca\xb2\xde\xff\xfe\x32\x00\x80\x47\x5e\x21\x49\x6c\x6d\x72\xd9\x6a\x19\xe6\x6a\xef\x47\x17\x1e\x60\x93\x97\x78\x20\x81\x6c\x75\x72\xdd\x16\xd2\xcc\xd2\xa9\xbe\x58\x2d\x51\xf8\x8b\xde\x94\x93\x21\xb9\xf0\x64\xb5\xf8\xf1\x44\xff\xba\x4f\x09\x8d\x84\x52\x07\x9d\x07\xe4\x16\x0f\x42\x38\xb9\x95\xe9\xe3\x55\xe5\xf3\xd9\x30\x8a\xbb\xe0\x37\xfd\x2d\x95\x4c\x7b\xb5\xeb\x1c\xe3\xfd\x62\xd7\x3c\x3a\x0f\xc5\x90\xe4\xc2\xf9\xf8\x73\xca\x85\x7f\xbc\xb7\x63\x67\xd3\xa0\x39\xf9\x71\x9b\xef\x40\xb8\x07\x5a\x76\x45\x2d\x37\xb2\xfc\x78\x7e\xe9\x79\xeb\x47\xe4\x35\x7c\x07\x00\x00\xff\xff\x53\xe9\xaf\x34\xcd\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html", size: 461, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd2\x41\x6e\xf2\x30\x10\x05\xe0\x3d\xa7\xb0\x66\xcf\xcf\x05\x12\x2f\x7f\xa9\x8b\x88\x05\xdd\x57\x4e\x3c\x09\x23\x26\x33\x96\xe3\xd0\x70\xfb\x0a\x70\x5b\xa1\x22\x16\xb4\xf6\x26\x91\xf2\xa2\xa7\xf7\xc9\xc6\x18\x53\x79\x3a\x9a\x8e\xdd\x34\xd5\xd0\x6b\x1c\xd7\x43\xd4\x39\x80\x5d\x99\x7c\x2a\x76\x2d\xb2\xe9\x35\xd6\x90\xf4\x80\xd2\x13\x27\x8c\x0d\x09\xd8\x86\xa4\xda\x5c\xbe\x7f\xe7\x2f\xff\x90\x84\x39\x19\x19\xd6\x9e\x26\xd7\x32\xfa\x1a\x8e\x84\xef\x5b\xe1\x53\xa3\xde\x31\xdc\xc4\xf3\x91\x61\x3d\xaa\x47\xbe\xe9\xf9\x37\x92\xdc\x4d\xa7\x53\xc0\x1a\x64\x1e\x5b\x8c\x70\xb3\xa0\x53\x49\x51\xef\x77\x90\xff\xb1\xc2\x04\x76\x1d\xee\x95\x3d\xc6\x1a\xf2\xf2\x6a\xe3\xe9\x68\x57\xab\x5f\x11\xb9\x05\x6c\xe3\x96\xf2\x44\x6e\x29\x48\xe4\x96\x72\x44\x2f\xd2\xf1\xec\x11\x6c\x7e\x31\xdb\x48\x03\x89\x63\xf3\x7a\x0e\x15\x97\xd3\x39\x85\x39\xbd\x69\x6e\x7d\xa0\xd8\xed\xb1\x3b\xb4\xba\x3c\xed\xf8\x35\xf5\xcf\xf0\x76\x18\xc0\xee\x30\xb8\xe8\x92\xc6\xe2\x56\xd3\x67\xd3\x03\xa5\x84\x4b\x7a\x5a\xe8\xbc\xa7\xd8\x4d\xfb\x4f\xcc\x18\xc1\x5e\x9f\xc5\xb1\xfa\x6b\x5d\x21\xa9\x3c\xe6\x01\xd6\x47\x00\x00\x00\xff\xff\x5c\xa7\xb5\x63\xdb\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersShingleHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersShingleHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/shingle.html", size: 1499, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x6a\xc3\x40\x0c\x44\xef\xfd\x0a\xb1\x77\xd7\x3f\xb0\xf6\x1f\xb8\x3d\xb4\xd0\x63\x50\xbc\xb2\x59\xaa\x5d\x2d\x2b\xd5\xa5\x84\xfc\x7b\x49\x1c\x17\x87\x12\x9d\x86\x61\x1e\xa3\x01\x00\xf0\x21\x2e\x30\x32\xaa\x76\x6e\x92\x9a\x9a\xb9\xca\x57\x71\xfd\x13\xdc\xce\x33\x1e\x89\x61\x92\xda\x39\x93\x4f\xca\x53\x64\xa3\xfa\x7e\x91\x03\x16\x75\xfd\x9b\x49\x81\x0f\xa9\x41\x7d\x7b\x0d\xef\x60\x25\xa6\xd1\x20\xcf\x4d\x88\x8a\x47\xa6\xd0\xb9\x25\xd2\xf7\x6b\xe6\x9f\x41\x02\xb2\xfb\xcb\x6e\x97\xe7\x26\x49\x20\xbe\xab\x7b\x56\x93\x72\xb8\x1a\x87\x84\xe5\x3f\xb5\x9f\x30\x4a\xb6\x2a\xec\x20\x86\x47\x3f\xdf\xf1\x5e\x8a\x45\xc9\x97\xe6\x4a\x85\xd0\x6e\xd4\x80\x05\x62\x86\x4d\xbf\x60\x22\x75\xfd\xe9\xb4\x19\xe7\xb3\x6f\x57\x74\xb7\xb8\x5d\x27\xaf\x8e\x6f\x43\x5c\xfa\xdf\x00\x00\x00\xff\xff\x7b\xb1\xcb\x2c\x68\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html", size: 360, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x51\x8a\x85\x30\x0c\x45\xff\x67\x15\x21\xff\x8e\x1b\x68\x5d\x81\xc3\xac\xa1\x9a\x58\xcb\xc4\xa4\xd4\xea\xe0\xee\x1f\x88\xf0\x90\xe7\xfd\xbe\x87\xc3\x01\x00\x70\x94\x76\x18\x25\xac\xab\xc7\xc9\xca\xd2\xc4\x62\x5b\xc6\xee\x0b\xae\x39\x09\x03\x0b\x4c\x56\x3c\x56\xfb\x63\x9d\x92\x54\x2e\x3d\x2b\x76\x3d\x6b\xac\xb3\x6b\xcf\xcb\x1b\x39\xb1\xa4\x79\xab\xa0\xb1\xa1\xb4\x86\x41\x98\x3c\xee\x89\xff\x7f\x55\x8e\x1f\xa3\x20\x78\xbb\x5f\xd3\xd8\x2c\x46\x2c\x37\xd5\xb7\x9c\x9a\x47\xa0\x1e\x99\x3d\xea\xb6\x0c\x5c\xf0\xd6\x31\x9a\xd6\x62\xcf\x9a\x44\x1f\x2d\x90\x25\x8c\x3c\x9b\x10\x17\x8f\x57\xbf\x6b\x29\xed\xdd\x2b\x00\x00\xff\xff\x47\xb1\xf0\x08\x27\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html", size: 295, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcf\xc1\x0a\x83\x30\x0c\x06\xe0\xfb\x9e\x22\xf4\xee\x7c\x81\xea\x1b\xb8\x5d\x76\x1f\x99\x8d\x52\x96\x26\xa5\x2d\x93\x21\xbe\xfb\x10\xe7\x98\x39\xfd\x84\x7c\x09\x01\x00\xb0\x99\x98\xfa\x02\x32\x56\xce\x67\x7c\x30\xb9\xc6\xbc\x3c\x4d\x57\xe1\x77\xa7\x0e\xd9\x9c\xe0\xaf\x64\xac\x82\x3a\xe2\xc6\x14\x7d\x92\x0c\x9e\x0b\xa5\xf3\xa4\xc9\xdd\x03\xc6\xe3\x6c\xcf\x98\x73\x63\x06\x4d\xa1\xea\x55\x4a\x52\x36\xe0\xdd\x81\xde\xd6\xd8\x61\xcc\xa6\xfd\x59\xab\xb1\x78\x95\xf5\x56\xa2\x48\x58\xbe\xa2\xc3\x08\x5e\x60\xcf\x17\x0c\x94\x4d\x3b\xcf\x7b\x63\x59\x6c\xbd\xd1\x6d\x97\xad\xb7\xe7\xda\x4f\x00\x00\x00\xff\xff\x5c\xa2\x5c\x50\xe9\x00\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html", size: 233, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenfiltersHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8f\xdb\x20\x10\xbd\xe7\x57\x4c\x39\x6d\xa4\x75\xac\xaa\x57\xec\x53\xdb\xdb\x6e\x2f\xdb\x73\x45\xcc\xd8\x46\x21\x80\x60\xec\xc4\x5a\xed\x7f\xaf\xc0\xeb\x8f\x6c\xa2\x76\x5b\x55\xf5\xc1\x1a\x86\xe1\xf1\x78\x8f\x81\x93\xd8\x6b\x84\x4a\x8b\x10\x0a\x36\x0e\xd2\x3f\x0b\xe4\x95\x43\xc9\xca\x0d\x00\xa7\x16\x85\x8c\x51\x8c\xfd\x18\xa4\x74\xf9\x28\x8e\xc8\x73\x6a\xd7\xb9\xa7\xc1\x5d\xe5\x96\x31\xcf\x47\x84\x98\x79\x45\xe5\xb4\xb7\x72\x98\xf1\xc1\x34\x99\x47\x87\x82\x0a\x76\x47\xb5\x11\x47\xbc\xa7\xba\x17\x7a\x0b\xca\x80\x32\x12\xcf\x0f\xc2\x39\x65\x9a\x9d\x30\x42\x0f\x41\x85\x1d\xd9\x03\x9a\x1f\xb5\xd2\x84\x3e\xb0\x65\x67\x59\x72\x11\xf1\x2a\xad\xaa\x43\xc1\x50\x2a\x7a\x8a\xa5\x5f\x53\xe5\x84\x0e\x09\xfe\x1e\xc8\x77\xb8\x65\xe5\xf3\xf3\x98\x7f\x79\xe1\xb9\x88\xd4\xe5\x1a\x30\xce\xf6\x42\xef\x68\x70\xa9\xe2\x72\xf6\x35\x04\xe0\x52\xf5\x93\xb0\x7b\x32\x59\xe3\x6d\xe7\x60\x8e\xb2\x73\x60\xe0\xad\xc6\x82\xa5\x31\x5b\x56\x02\xf0\x7d\x47\x64\x4d\x24\xae\xea\x82\x7d\xe8\x15\x9e\xbe\x19\x3d\x3c\x58\x29\x34\x5b\x15\x4e\xdf\x3b\x4f\xb8\x65\x10\x59\x17\x6c\xc4\xbf\x85\xb4\x30\x4e\x5c\x25\xd6\xa2\xd3\x94\xe2\x73\xb8\x20\x09\xc0\x83\x13\x66\x5a\xd1\xe8\xc1\xb5\xaa\xb2\x06\xe6\x28\x8b\x64\x6e\x6d\x22\xbc\x12\x59\xab\xa4\x44\x53\xb0\x28\x3a\x2b\x79\x1e\xc1\x4a\xf8\x22\x15\xad\x95\xc8\x47\xaa\xff\x48\x1d\x89\x1a\x09\xaf\xf5\xf9\xdf\xc2\x90\x17\xa1\xfd\x43\x65\x3e\x27\xee\xbf\xd4\x86\xe7\x52\xf5\xf3\x6d\x9c\x6f\xe6\xd4\x72\x73\x77\x85\xd6\x9e\x0a\xf6\x9d\x94\x0e\xbb\x03\x0e\xe1\xee\x1d\x4d\xb5\xdd\x69\x34\x0d\xb5\xc0\xe1\xe3\xba\xc1\xa0\xb2\x3a\x12\x2c\xd8\x27\x56\x3e\x5a\x83\xd7\xfb\xf2\x7c\x6e\x70\x4e\xb5\xb5\x74\xe3\x29\xb9\xc4\xd9\xfc\xa5\xd7\x8b\xd3\x06\x4f\x6b\x9b\x7f\x6b\xf0\x1b\x7b\xc3\xf1\xc2\x65\xd7\x69\x9d\x79\xd5\xb4\xc4\xca\x47\x3c\x41\x82\x86\x11\xfb\xad\x0d\x37\xcf\x3f\x9e\x9a\xe7\xe9\x71\x2d\x37\x9b\x9f\x01\x00\x00\xff\xff\xb7\x3c\x3b\xe3\x79\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenfiltersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenfiltersHtml,
		"static-bleve-mapping/partials/analysis/tokenfilters.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenfiltersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenfiltersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenfilters.html", size: 1401, mode: os.FileMode(420), modTime: time.Unix(1666172047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x72\xdb\x20\x10\xbd\xfb\x2b\x28\x27\xe7\xa0\x6a\xda\x5c\x25\x5d\x7c\x4e\x7a\x68\x7e\x00\xc1\x5a\x62\xbc\x62\x35\x80\x9c\xba\x1e\xff\x7b\x07\x90\x1d\x49\x91\x3b\x4d\x27\x3a\x24\x78\xf7\xf1\xf6\xed\x5b\xa0\x50\xfa\xc8\x24\x0a\xe7\x4a\x5e\x23\x1c\xe1\x89\x94\x40\x5e\x6d\x36\xd3\x4c\x17\x82\x59\x0b\x42\x81\xe5\xd5\x86\x31\xc6\x8a\xf6\x71\x9e\xf5\xda\x23\xf0\x6a\x37\x38\x4f\x1d\x7b\xa1\x03\x18\xfd\x1b\x6c\x91\xb7\x8f\xd5\xa6\xc8\x95\x3e\xae\x92\xd6\xa4\x4e\x57\xca\x90\x34\x4d\xe6\x5a\x7a\x2d\x39\x58\x4b\xf6\x09\x9c\x13\x0d\xf0\x98\x8f\xdf\xb8\x59\x20\x58\xcf\xe2\xdf\x4c\x09\xd3\x80\x0d\x3b\x25\x92\x38\x4c\xc0\x96\x10\x46\x2c\xaf\xd8\xf9\x3c\xe5\xbc\x5c\x52\xd1\x51\x59\x5c\xef\xc9\x76\xd7\x0a\x61\xcd\x47\x86\xb8\xae\x6e\xbc\xd3\x2e\x42\x2a\x6b\x2c\x0d\xfd\x04\x10\x41\x28\x6a\x40\xb6\x27\x5b\x72\x6f\x44\x07\xbc\x7a\x16\x1d\x14\x79\x8c\x2f\xb0\xda\xf4\x83\x0f\x1d\x28\xed\x44\x8d\xa0\x4a\x7e\xd4\xf0\xfa\xc3\xe0\x29\x0d\x64\x06\x1f\x3f\xd3\x64\x1d\x29\xc0\x92\x47\xfa\x35\x88\x3f\xf5\x50\x72\x0f\xbf\x3c\x9f\x09\x96\x64\xbc\xa5\x75\x5a\xad\xae\x82\x59\x8f\x42\x42\x4b\xa8\xc0\x96\xfc\x39\xf6\xf0\x66\xc2\xc4\xb8\xff\x33\xe5\x7a\x44\x82\x48\x5e\xbd\x9c\xfa\x3b\xe6\x4c\x88\x25\x61\xe6\xba\xec\xdb\x77\x16\x1d\x5b\xaf\xe1\x00\x41\x7e\xd8\xcd\x78\x7e\xda\x70\x94\x26\xd2\x82\xa8\x5d\x0c\x6e\x1f\xee\xee\x1a\x87\x70\xdb\xf4\x35\x36\xb4\x8a\xfe\xd7\x19\xa4\x21\xcc\x0d\x7a\x87\x2b\xa8\xf7\x9a\x4c\x90\x60\xa1\x07\xe1\xe7\xc2\x99\x36\x6c\xd6\x88\xe3\xd5\xf9\x3c\x8d\x5c\x2e\x45\x9e\x38\x16\x0e\xe6\xc9\xc2\x65\x34\x0e\x7c\xf1\x73\x3e\xff\xdb\xed\x5d\x98\x11\x12\xda\x48\x1c\x14\x30\x67\x65\x72\xa0\x17\xbe\xe5\xf9\x78\xf7\xf3\x10\xf9\xdb\x43\xb1\x27\xf2\x6f\xaf\x4f\x3d\x78\x9f\x5a\xd7\xfb\xe5\x74\x6f\xef\x99\x37\xac\xf6\x26\x53\xb0\x17\x03\xfa\xb9\xd1\xf1\xb5\xd0\xf2\x50\x72\x29\x8c\x04\xdc\x3e\xf0\x6a\x87\xe4\xa0\xc8\x13\xf7\x6a\xa1\x2f\x9f\x55\x29\xae\x3e\x52\xea\x0e\x65\x3d\x68\x54\xdb\x70\x5b\x17\xe7\x33\xdd\xfc\x44\xf9\x4e\x67\x6f\x75\x27\xec\x89\xf5\x03\x62\x66\x75\xd3\x7a\x5e\xfd\x14\xc7\x49\xef\xb7\x39\xa4\xff\x7f\x02\x00\x00\xff\xff\xcd\xe6\x76\xec\x27\x06\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizerHtml,
		"static-bleve-mapping/partials/analysis/tokenizer.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizerHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizer.html", size: 1575, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersExceptionHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcb\x6e\xdb\x30\x10\xbc\xe7\x2b\xb6\x44\x0f\xf1\x41\x51\xd2\xb3\x24\xa0\x28\x7a\xe8\xa1\x69\x11\xf4\x07\x28\x71\x2d\x2d\x4c\x2d\x05\x92\xf2\x23\x86\xff\xbd\x90\x68\xbd\x1c\xdb\xed\x8d\x90\x66\x67\x87\x3b\xb3\x4c\x14\x6d\xa1\xd0\xd2\xb9\x54\xac\x8d\xad\xa3\xd2\x9a\xb6\x11\xd9\x03\x40\xa2\x65\x8e\x3a\xfb\xbe\x2f\xb0\xf1\x64\x18\x7e\x4b\xef\xd1\xb2\x4b\xe2\xf0\xa7\xc3\xb4\x7a\xa8\xd6\xe4\xfc\xb9\x1a\xb8\x8c\x5c\x65\x76\xa9\xf0\x66\x83\x4c\xef\x68\x9f\x70\xa0\x71\x4f\x1a\xb9\xf4\x15\x24\xf0\xd2\xf7\xe9\x3a\xd1\x47\x96\x88\x3c\xd6\x22\x7b\x35\x8c\x49\xac\xa9\xef\x16\xb7\x77\xba\xf6\x54\xf0\x7f\xbd\x33\x78\x1e\xf0\x2d\x45\xce\x58\x2f\x73\x8d\x13\x43\x6d\x14\xea\xeb\x14\xff\xd6\x7c\xa6\xe9\x89\x2c\x36\x28\x7d\x2a\x10\x88\xe1\x1a\x1d\x78\x2b\x8b\x0d\xe4\x07\xf8\x4c\xac\x70\x7f\xa6\x07\x48\x5c\x23\x79\x68\x51\xea\x43\x53\x51\x61\x18\xc6\x53\x54\x13\xb7\x4e\x64\x49\xdc\x01\x33\x38\x1e\x01\xe1\x74\x5a\x54\x73\x19\xd1\x3a\x15\x9f\xb6\x84\xbb\x5f\xac\x0f\x3f\x8d\x92\x7a\xd2\x77\xd6\x58\x68\x2a\x36\xa9\xb0\x58\x9b\x2d\x8e\x76\x3f\x06\x3d\xab\x25\xfc\x8e\x9e\x50\x0f\x4d\xab\x75\x64\xa9\xac\xfc\xa8\x2d\x0c\x6c\x61\x62\x12\x2b\xda\x66\x0f\x0f\x7d\xfe\x6e\xcb\xbc\x9e\xcc\x31\x9b\xb3\x24\x02\xcc\xa3\x5c\x18\x1d\xb9\x3a\x7a\x79\x9e\xc6\x49\xdc\xb4\x7e\xe6\x2d\xe3\xce\x62\x89\xfb\x46\x80\x3f\x34\x98\x0a\x8f\x7b\xbf\xbc\xec\xa2\x7d\x61\xd8\x5b\x73\x31\x3d\x20\x95\x8a\xd1\xcc\xb7\xc0\x17\x0f\x17\xee\xaf\x78\x43\xda\x97\x49\x59\xde\x7a\x6f\x78\xe6\x84\x54\x6a\xb2\xc1\x57\xe4\x56\x83\xc6\x00\xbd\xd0\x30\x30\xe7\x9e\x21\xf7\x1c\x29\x5c\xcb\x56\xfb\x85\x13\x5f\x95\x4a\xe2\x50\xbd\x50\xb7\xf0\xe1\xde\x3b\x00\x6b\x63\x53\x21\x59\xea\xc3\x3b\xda\x3f\x43\x92\x45\x36\x1e\x3b\x04\xbc\x61\x2d\x89\x89\x4b\xf8\xd1\xcd\x7b\xfe\x54\x38\xd4\x58\xf4\x0e\x28\x72\xdd\xba\xa9\x54\xdc\x0c\x66\x37\x8c\x4a\x72\x89\xb3\x25\xfc\xd6\x7f\x50\x8f\xab\x0b\xe0\x87\x65\x1d\x4f\xe2\xaa\x83\xbd\x69\x13\xe6\x3c\x0f\x13\x1e\xb9\xd9\xce\x8e\x90\xc5\xee\xbe\xca\x1a\x9d\xc8\x8e\xc7\xf1\xcb\xe9\x94\xc4\xa1\x3a\xe4\x3b\x5c\x74\x9c\xed\xdf\x00\x00\x00\xff\xff\xda\x98\xef\xe8\x63\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersExceptionHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersExceptionHtml,
		"static-bleve-mapping/partials/analysis/tokenizers/exception.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersExceptionHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersExceptionHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers/exception.html", size: 1379, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersGenericHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersGenericHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersGenericHtml,
		"static-bleve-mapping/partials/analysis/tokenizers/generic.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersGenericHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersGenericHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers/generic.html", size: 0, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersRegexpHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x9c\xc2\xf2\xbe\xcc\x05\x92\xee\x58\x22\xa4\xb9\x41\xa6\xf6\x04\x0b\x4f\x1c\x39\x69\xe9\x70\x7a\xa4\xa1\x12\x54\xf4\xaf\x9f\xfd\xf4\x3f\x00\x40\x20\x59\x60\xd2\xd4\x5a\xc4\xab\xf9\x6d\xc8\x6e\x73\xc5\xf1\x09\xb6\x04\x4d\x17\x56\xb8\x9a\x47\xec\xf6\xc1\x45\xbe\xd8\xcf\x9c\x79\xad\x38\x9e\x39\xcf\x9a\x1c\x5e\xd6\xea\xdc\x9a\x58\x09\xa7\x07\xff\x7b\xff\xf8\x21\xa5\xce\x1d\x4a\x1e\x48\x5a\xba\x28\x53\xc4\x45\xf8\xf3\xad\xe8\xfd\xd5\x28\x29\xee\xf0\x2d\x25\x0f\x37\x23\xd6\x3f\xde\x67\xff\x11\x1f\xe1\xfd\x5e\x39\x62\xe7\xb5\xe3\xae\xd0\x64\xa5\xbb\x1d\x2b\x84\xfe\x97\x82\xaa\x69\xe2\x77\x53\x62\x8f\xb8\x2d\x11\x4e\x24\xcb\xf8\x1d\x00\x00\xff\xff\xcd\x92\xc8\xf0\x31\x01\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersRegexpHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersRegexpHtml,
		"static-bleve-mapping/partials/analysis/tokenizers/regexp.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersRegexpHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersRegexpHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers/regexp.html", size: 305, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisTokenizersHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4f\x8f\xda\x3e\x10\xbd\xf3\x29\xe6\x37\xa7\x45\xda\x10\xfd\xd4\xab\x93\x53\x7b\x5c\x7a\xd9\x7e\x00\x83\x87\xc4\xc2\xd8\x96\x3d\x01\x52\xb4\xdf\xbd\x72\x42\xfe\xc0\xa2\x6e\x5b\x55\xe5\x80\x9e\x27\xe3\xe7\x37\x6f\x3c\x16\x2c\x37\x86\x60\x6b\x64\x8c\x05\xf6\x8b\xee\x3f\x8b\x1c\xb4\x27\x85\xe5\x02\x40\x70\x4d\x52\x25\x94\x70\xe8\x41\x17\x2e\xd7\xf2\x40\x22\xe7\x7a\x1e\x7b\x6d\xfd\xbb\xd8\xb4\x16\x79\xcf\x90\x22\x57\x56\xc1\x1b\xa7\xda\x91\x1f\x6c\x95\x05\xf2\x24\xb9\xc0\x27\xb6\xf2\x40\xcf\x7c\x94\x66\x09\xda\x82\xb6\x8a\xce\x2f\xd2\x7b\x6d\xab\x95\xb4\xd2\xb4\x51\xc7\x15\xbb\x3d\x59\xfd\x9d\x42\xc4\xe9\x50\x55\x0a\x99\xa8\xb6\x46\x6f\xf7\x05\x92\xd2\xfc\x3a\xe4\x5d\x69\x21\xf1\x3e\x03\x87\x86\x96\x58\x5e\x2e\x5d\xf4\xed\x4d\xe4\x32\x09\x56\x73\xae\xcb\x25\xe5\xae\xb8\xf5\x5d\xc2\xed\xc7\x2b\x04\x10\x4a\x1f\x07\x37\x37\x6c\xb3\x2a\xb8\xc6\xc3\x88\xb2\x73\x44\x08\xce\x50\x81\xdd\x1a\xa7\x9d\x00\x62\xd3\x30\x3b\x9b\x24\xeb\x5d\x81\xff\x1d\x35\x9d\xbe\x5a\xd3\xbe\x38\x25\x0d\xce\x12\x87\xdf\x2f\xd4\xb6\x44\x48\x8a\x0b\xec\xb9\x1f\xb1\x4c\x6a\x3b\x9d\x8a\x76\xb2\x31\xdc\xe1\x73\xbc\x11\x08\x20\xa2\x97\x76\xd8\x51\x99\xd6\xd7\x7a\xeb\x2c\x8c\x28\x4b\x42\x1e\x1d\x22\x83\x96\x59\xad\x95\x22\x5b\x60\xb2\x1b\x4b\x91\x27\xb2\x12\xbe\x28\xcd\x73\x17\xf2\x5e\xea\x5f\x72\x46\x91\x21\xa6\x3b\x6f\xfe\xb5\x2b\x1c\x64\xac\x7f\xd3\x96\xcf\x9d\xf0\x9f\x1a\x23\x72\xa5\x8f\xe3\x35\x1c\xaf\xe4\x30\x60\xe3\x2c\xc5\xda\x9d\x0a\xfc\xc6\xda\xc4\xd5\x9e\xda\xf8\xf4\xd1\x10\x2d\x57\x86\x6c\xc5\x35\x08\xf8\x7f\x3e\x50\xb0\x75\x26\xa9\x2b\xf0\x13\x96\x6b\x67\xe9\xfd\xa1\x22\x1f\x67\x59\xf0\xce\x39\x7e\xf0\x6a\xdc\xf2\x2c\xfe\xb0\xcb\x53\x8f\x2d\x9d\xa6\x06\x7f\xd8\xdb\xbb\xce\xc6\xc3\x4d\x83\x7d\x63\x4c\x16\x74\x55\x33\x96\x6b\x3a\xc1\x48\x7c\x6f\xff\xc3\xd2\xfb\x82\x45\xde\x3d\xa1\xe5\x62\xf1\x23\x00\x00\xff\xff\x3a\x2b\x4b\xb4\x5f\x05\x00\x00")

func staticBleveMappingPartialsAnalysisTokenizersHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisTokenizersHtml,
		"static-bleve-mapping/partials/analysis/tokenizers.html",
	)
}

func staticBleveMappingPartialsAnalysisTokenizersHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisTokenizersHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/tokenizers.html", size: 1375, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisWordlistHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xcd\x6e\x9b\x40\x10\xbe\xfb\x29\x26\x73\x72\xa4\x12\xab\x8a\x7a\xa8\x04\x48\x55\xae\x4d\x2a\xb5\x87\x9e\x17\x76\x0c\xab\x0c\xbb\x68\x77\xb1\xe3\x46\x79\xf7\x6a\x17\x1c\x03\xf1\x4f\x13\xd5\x07\xb3\xb0\xc3\x37\xdf\xcf\x00\xa9\x54\x1b\x28\x59\x38\x97\x61\xc1\xb4\xa1\x7b\x23\x05\x63\xbe\x58\x8c\x77\x9a\x70\x31\xa9\x49\x48\xb2\x98\x2f\x00\x00\xd2\xfa\x76\xba\xeb\x95\x67\xc2\xfc\xae\x73\xde\x34\xf0\xdb\x58\x09\xdf\x95\xf3\xe9\xaa\xbe\xcd\x17\xe9\x4a\xaa\xcd\x51\xd0\xc2\xc8\xdd\x1e\x32\x6c\xea\x2a\x71\xb5\xd9\x66\x48\xd6\x1a\x7b\x4f\xce\x89\x8a\x30\xee\xc7\xdf\x70\xb3\x60\xb2\x1e\xe2\x7f\x22\x85\xae\xc8\x86\x3b\x4b\x36\xe2\x71\x54\x6c\x0d\xd3\x50\x8b\x39\x3c\x3f\x8f\x31\x5f\x5e\xfa\xa6\x03\xb3\xb8\x5e\x1b\xdb\xec\x3b\x84\x35\x0e\x08\x71\x9d\xbf\xe2\x8e\x55\x84\xad\xa4\xb2\xa6\x6b\x47\x05\xb1\x88\x45\x41\x0c\x6b\x63\x33\xf4\x5a\x34\x84\xf9\x83\x68\x28\x5d\xc5\xeb\xb3\x5a\xa5\xdb\xce\x07\x05\x52\x39\x51\x30\xc9\x0c\x37\x8a\xb6\x3f\x34\xef\xfa\x40\x26\xe5\xc3\x4f\x57\x49\x63\x24\x71\x86\x11\x1e\xfc\xae\xa5\x0c\x3d\x3d\xf9\xa3\xe5\x63\xc2\xa5\xd1\xde\x1a\x46\x50\x72\xcf\x0e\x5a\x16\x25\xd5\x86\x25\xd9\x0c\x1f\x22\xe1\x83\xe2\x91\x4b\x1f\x72\x60\x6b\xac\x74\x98\x87\xb1\x70\xc7\x2d\x70\xc4\x54\xbe\xdb\x83\x91\x09\x3d\x00\xc9\xd8\x03\xa1\xe9\xd8\xab\x96\x29\x56\x0c\xeb\x0c\xbd\xed\xe8\x38\x50\x70\xa2\x67\x09\x4e\xfd\xa1\x0c\xbf\xe0\x51\xcb\x4e\xb1\x30\xad\x57\x46\xbb\x0c\x95\x7c\x02\xe1\x20\x60\x05\xed\xb0\x54\xf2\xe9\x53\x3c\xbd\x06\xa5\x61\x70\x62\x2a\x7e\xd5\x93\xbf\x60\xb8\xae\x12\xb5\xce\xf0\xea\x9c\x2d\xef\x0a\xa5\x16\x1e\xf3\xe3\x71\x8c\x02\x2e\x0d\x27\xae\x49\xbe\xce\x90\xc6\x63\x3b\x44\x10\xba\x4a\xe1\xc5\x8d\xa6\x6d\x88\xe1\xe2\x4c\x9e\x99\xca\x57\x88\xc9\x5c\x06\xf7\xde\x98\x17\xad\xba\xc0\xfe\xf6\x0d\x7b\x80\xb4\xe8\xbc\x37\xba\x7f\x73\xa8\xf2\x31\x43\x21\xe3\xf8\x2c\xaf\x4f\xb0\x05\x18\x14\xb9\xae\x68\xd4\x29\x4d\x07\x59\x85\xd7\x50\x78\x9d\xb8\x26\x1e\x24\xad\x45\xc7\x1e\xf3\x6f\x52\xa6\xab\xbe\xfb\xbf\xd0\xb2\xd4\x98\x0d\xc5\xc1\x5e\x4e\xc6\xfc\x0c\xcf\xc9\x83\x34\xb9\xe9\x86\x49\x57\xbe\x86\x14\x3e\x5f\x92\xd9\x33\xf9\xa0\x4c\x68\x3b\xe6\xc4\xaa\xaa\xf6\x98\xff\x8c\x12\x8e\x8b\x9e\x25\x38\x3a\x4d\x57\x61\x30\xce\x7d\x3f\xd6\xc6\xf8\xc3\x47\xe9\xe0\x5c\x78\x50\xa6\xcf\xc9\x9c\xec\x3e\x8c\xc5\xcc\xb5\xc1\xf3\x52\xe8\x92\x78\x79\x8d\xf9\x1d\x1b\x37\x63\x3e\x6b\x74\xf5\xbf\x3a\xc5\xd5\x7b\x5a\x9d\x80\x2c\x3a\xc5\x72\x19\xde\xeb\xb3\x09\x99\xc4\x3a\xe7\xd9\x5a\xd5\x08\xbb\x9b\xe4\xf6\x4b\x8c\x53\x7b\xcd\xa1\x3f\xfe\x0d\x00\x00\xff\xff\xee\x38\xbb\x9d\x3e\x08\x00\x00")

func staticBleveMappingPartialsAnalysisWordlistHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisWordlistHtml,
		"static-bleve-mapping/partials/analysis/wordlist.html",
	)
}

func staticBleveMappingPartialsAnalysisWordlistHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisWordlistHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/wordlist.html", size: 2110, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsAnalysisWordlistsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x41\x8f\xdb\x2c\x10\xbd\xe7\x57\xcc\xc7\x69\x23\xad\x63\x7d\xea\x15\xfb\xd4\xde\xba\xe9\xa9\xea\xb1\x9a\x98\x89\x8d\x82\x01\xc1\x38\x89\xb5\xda\xff\x5e\x61\xaf\x1d\x27\x4d\xbb\x6d\x55\x35\x87\xe8\x31\x98\xc7\xe3\x3d\x06\xc9\xb8\x33\x04\x95\xc1\x18\x0b\x31\x0e\x86\xff\x2c\x72\xd0\x9e\x94\x28\x57\x00\x92\x1b\x42\x95\x50\xc2\x61\x04\x43\xb9\xdc\x62\x4b\x32\xe7\x66\x59\xfb\xf1\x58\xe6\xe3\xea\x54\x79\x65\x94\xbc\x73\xaa\x9f\xb9\xc1\xd6\x59\x20\x4f\xc8\x85\x78\xe0\xd6\x62\x4b\x8f\xdc\x1e\xd1\xac\x41\x5b\xd0\x56\xd1\xf9\x09\xbd\xd7\xb6\xde\xa0\x45\xd3\x47\x1d\x37\xec\x0e\x64\xbf\xb6\xe8\xa3\xb8\x6c\xab\x4a\x89\x89\xac\x32\xba\x3a\x14\x82\x94\xe6\x2f\x2e\xa8\x8f\x3a\xf2\xc4\x0b\x03\xf1\x23\x70\xe8\x68\x2d\xca\xe7\xe7\xb1\xfe\xf2\x22\x73\x4c\xa2\xd5\x92\x6d\x39\x7b\x3d\xf3\x0a\x01\xa4\xd2\xc7\xc9\xca\x1d\xdb\xac\x0e\xae\xf3\x30\xa3\xec\x1c\x05\x04\x67\xa8\x10\xc3\x58\x5c\x56\x02\xc8\x5d\xc7\xec\x6c\x52\xac\xf7\x85\xf8\xef\xa8\xe9\xf4\xc9\x9a\xfe\xc9\x29\x34\x62\xf1\xe1\xf4\xfb\x95\xa3\xad\x05\x70\xef\xa9\x10\x23\xf9\x3d\x9a\x8b\xdc\x41\xa8\xa2\x3d\x76\x86\x07\x7c\x8e\x57\x0a\x01\x64\xf4\x68\xa7\x15\xb5\xe9\x7d\xa3\x2b\x67\x61\x46\x59\x52\x72\x6f\x13\x0c\x1a\xb3\x46\x2b\x45\xb6\x10\xc9\x6d\x51\xca\x3c\x91\x95\xf0\x41\x69\x5e\xda\x90\x8f\x52\xff\x92\x35\x8a\x0c\x31\xdd\x98\xf3\xaf\x5d\xe1\x80\xb1\xf9\x4d\x5b\xde\x0f\xc2\x7f\x6a\x8c\xcc\x95\x3e\xce\xf7\x70\xbe\x93\x53\x8b\xcd\xdd\x14\x1b\x77\x2a\xc4\x67\xd6\x26\x6e\x0e\xd4\xc7\x87\xb7\x9a\x68\xbd\x31\x64\x6b\x6e\x40\xc2\xff\xcb\x86\x82\xca\x99\xa4\xae\x10\xef\x44\xb9\x75\x96\xbe\xdf\x54\xe6\x73\x37\x4b\xde\x3b\xc7\x77\xde\x8c\x6b\x9e\xd5\x1f\xa6\x7c\xc9\xd8\xd2\x69\x0e\xf8\xcd\x68\x6f\x82\x8d\xed\x55\xbe\xbe\x33\x26\x0b\xba\x6e\x58\x94\x5b\x3a\x41\xe2\x85\x44\x7c\xeb\xfe\xdd\x93\x8f\xe7\x95\xf9\xf0\x7e\x96\xab\x6f\x01\x00\x00\xff\xff\xf6\x28\xd5\xa9\x5b\x05\x00\x00")

func staticBleveMappingPartialsAnalysisWordlistsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsAnalysisWordlistsHtml,
		"static-bleve-mapping/partials/analysis/wordlists.html",
	)
}

func staticBleveMappingPartialsAnalysisWordlistsHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsAnalysisWordlistsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/analysis/wordlists.html", size: 1371, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsMappingIndexMappingHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\x4b\x6f\xe3\x36\x10\xbe\xe7\x57\xcc\xf2\x92\x16\x85\x56\x68\x8f\x85\x65\x60\x9b\x60\xd1\x02\x7d\x2c\xb0\x01\x7a\x34\x68\x72\x6c\x11\xa1\x48\x81\x1c\xd9\xf1\x16\xfd\xef\x05\xf5\xaa\x6c\x4b\x7e\xca\xd9\x6c\x2e\xa6\x28\x72\xe6\xfb\x3e\xce\x4c\x86\x9a\x48\xb5\x02\xa1\xb9\xf7\x09\x53\x46\xe2\xcb\x1f\x3c\xcf\x95\x59\xb2\xe9\x5d\xf9\xca\x2c\xa3\xfa\xed\x3f\xf7\x2b\x85\xeb\xbf\x8c\xde\xdc\xff\x0c\xcd\xf0\x5f\x36\xbd\xbb\x9b\xbc\x8b\x22\x48\x2e\xfb\x83\x28\x0a\x16\x3a\x28\x3c\x0a\x52\xd6\xb0\xfe\xe9\x5f\x91\x4b\x74\xe0\x53\xbb\x7e\xda\xe4\x58\xa3\xf5\x9f\xdb\x4d\x00\xdd\x5d\xce\xae\xcb\xb9\xed\x59\x61\x75\xe4\xb3\xe8\xc7\x9f\xea\x77\x00\x13\x1e\x98\x06\xab\x09\x7b\x37\x64\xbc\x5e\x0b\x50\xa9\xa2\xc4\x73\xc2\x06\xd6\x42\x02\xe4\x0a\x6c\xed\x03\x4c\x54\xe3\x7d\xa9\x37\x79\xaa\x84\x35\xd0\x8e\x22\x91\xe2\xca\x59\x13\x39\xb5\x4c\x89\x4d\x27\xb1\xea\xec\xd4\x7c\x8e\x7a\x1a\xbc\x40\xe3\x66\x12\x57\x93\x0d\xfc\x98\xf7\x31\x19\x87\xc8\x82\x6b\x7f\x3e\x13\x69\xd7\xe6\x0a\x22\x93\x58\xaa\x55\x79\x9a\xd5\xa0\xfe\xe9\x0b\x89\x5f\xac\xdc\x00\x0d\xd0\x3c\xaa\x45\x4f\xc4\x00\x4a\x45\x7c\xae\xf1\xb4\xd0\x99\x17\x44\xd6\x34\x0b\xf2\x42\xeb\xea\x18\x81\x4b\xd9\xf1\xd8\x51\x7d\x47\x7a\x2e\xe5\x43\xaa\xb4\xac\x17\x7e\x67\x0a\xad\xbf\x67\xd3\x0f\x52\x42\x57\xab\x49\x5c\x79\xea\x17\xe8\xd2\xc0\xaf\x93\x5c\x19\xa1\x0b\x89\x09\xf3\xc4\x49\x89\x59\xee\x70\xa1\x5e\xe0\x07\xb8\x8f\x73\xee\x48\x71\xed\xe3\xac\xc2\x11\x07\xad\xa3\xfa\xe1\x7d\x4a\x99\xbe\x0f\x07\x5d\xc3\x39\x70\x74\xcd\xef\xd7\x29\x17\x1f\x0c\xd7\x9b\x2f\xe8\xc6\xaf\x15\x7b\x96\x87\xf2\x6b\x77\xe1\x0d\xaa\x44\xeb\xe2\xf4\x0a\x71\x0d\xfc\xb1\x6b\xc3\x51\xf8\xe7\xd6\x05\xde\x47\xee\x30\xfd\x8b\xe3\x62\x3b\x95\xc0\x3b\x71\x30\x9d\x4a\x68\x5e\xd5\x83\x80\xe0\xdb\x49\xa6\x8f\x4a\xd3\x2d\x52\x69\xc7\xee\x50\x24\x6e\x2f\xbb\x41\x1a\x3d\x14\x9e\x6c\x06\xb5\x9f\xd3\x73\xe9\x52\xfc\x63\xe7\xd1\x69\xf8\xcf\x4d\xa6\xc5\x3e\xbb\x43\xec\x2f\x8e\x8a\x42\xcd\x23\xe2\x73\x8f\xd4\x21\x56\x4f\x42\x8a\x5c\x2a\xb3\x4c\xd8\x43\xca\x1d\x17\x84\xae\xa1\xd9\xd1\xef\x8a\x6c\x14\x29\x77\x35\xd1\x9e\x7c\xac\x64\xab\xb1\x1c\x42\xf7\x64\x9f\xd1\xa8\x2f\xa3\xc1\xa2\xd6\xde\xd5\xa8\xc6\xd5\xab\x04\x36\x82\x60\x7f\x5b\x27\xe1\x77\xe5\x69\x24\x5c\x6b\xeb\xa4\x0e\xe6\x4e\x05\xd5\x4e\xb4\x71\xf7\x46\x8b\xef\x27\x67\x73\x74\xa4\x70\xfc\xfa\xbb\x6f\x7a\xa8\x84\xed\xad\xbc\x45\x33\x23\x57\xdc\x08\x94\xa7\xd7\xdf\xeb\xf0\x8f\xde\xcd\x1c\xc1\x7f\x6e\xfd\xcd\x7b\xd9\x1d\x11\xe0\xaa\x76\x46\xc9\x84\xcd\x35\xae\xda\x7e\x3f\x2a\x54\x54\xf6\xff\x0b\x85\x5a\x46\xc1\x58\x63\x62\x61\x5d\x16\x2d\x9d\x2d\x72\xd6\x7f\xe7\xfb\x18\xb6\xec\x68\x11\x44\x36\x79\x41\xe5\x05\x2e\x61\x84\x2f\xb4\x6d\x50\x58\x43\xce\xea\xdd\xdb\x53\x60\x2d\x95\x0f\xb7\x34\x99\xb0\xe6\x73\x44\xdf\xaa\xcc\x4a\xd4\xdb\x1f\x37\xde\x07\x67\xb3\x92\xc1\xde\x8e\x5c\x73\x81\xa9\xd5\x12\x5d\xc2\x3a\x0f\x2c\xfe\xff\xf8\x3a\x75\xa4\xab\xe1\x21\x01\x1e\x71\xc1\x0b\x4d\xe5\x85\xee\x4d\x48\x20\x2b\x40\xb3\xe0\xf4\xb5\x45\x68\x5a\xee\x7d\x21\x3c\x6a\x14\x74\x22\xb3\x63\xd4\x9a\xbe\xba\x77\xa3\xcd\x43\x76\xf8\x84\x11\x70\x0f\x04\x0b\xeb\x80\x40\x99\xf6\xc6\xf0\x27\xcf\xd0\xef\x6f\xed\x3b\x98\xee\x3f\x95\x8a\xc1\x28\x32\x3d\x72\xc2\xf8\x49\x65\x08\x9f\xb8\xf3\x37\x97\x4b\x72\x42\x52\x19\xce\xf2\xd2\xdb\x79\xaa\x85\xcd\x01\x6a\x85\xf4\xeb\x6b\xf7\x76\x6a\x4d\x23\xef\xab\x96\x9b\xcf\x64\x1d\xc2\xe3\xc6\xf0\x4c\x89\x4a\x8c\xdd\x5b\xc0\x8e\x1a\x22\x45\xf1\x3c\xb7\x2f\x6c\x80\xed\x10\x3d\x1f\x3c\xcd\x64\xe5\xe9\x4a\xd4\xbf\x05\xc3\xaf\x82\xba\x7c\x38\x88\xfa\x15\x7a\xbf\x2d\xc3\xff\x05\x00\x00\xff\xff\x79\xbe\x2a\xdb\x89\x17\x00\x00")

func staticBleveMappingPartialsMappingIndexMappingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsMappingIndexMappingHtml,
		"static-bleve-mapping/partials/mapping/index-mapping.html",
	)
}

func staticBleveMappingPartialsMappingIndexMappingHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsMappingIndexMappingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/mapping/index-mapping.html", size: 6025, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsMappingTypeMappingTreeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x49\x6f\x1b\x3b\x12\xbe\xe7\x57\x54\x74\x88\x12\xcc\x28\xba\x0f\x24\x01\x03\x0f\x82\xb9\xe4\x21\x07\xdf\x05\xba\xbb\x24\x11\xa6\xd8\x0d\x36\xe5\x67\x3d\x47\xff\xfd\x81\x5b\x8b\x6b\x2f\x71\x0e\xcf\x80\xa1\x5e\x58\xdb\xd7\xc5\xaa\xfa\xb8\xa9\xe9\xcb\xee\x03\x80\xfa\x85\x0b\x5d\x49\x81\xb8\x3a\x11\x5e\x33\xfc\x00\xe6\xaf\x62\xa4\xeb\xb6\x8b\x33\x69\x5b\xca\x8f\xff\xd7\xef\x16\x3b\xfd\x76\xd3\xb5\x84\x03\x3f\xae\xe8\xa1\x5f\xf0\x75\xff\x4c\x79\x0d\xdb\x2d\x2c\xed\x93\xc7\x6b\x8b\x4b\x2b\x01\xb0\xa1\x4e\xe3\x91\x5d\xdb\x13\xad\x1a\x0e\xfd\xd5\xea\x40\x95\xf2\xcd\x9a\xee\x36\x6b\xa5\x7c\xd4\xce\xc7\x92\x9d\xb7\x9b\x11\xb5\x6a\xca\x7a\x38\x39\xa3\x72\x97\x5f\x18\xf3\xbc\xdc\xd5\x78\x20\x17\x26\x95\x2f\x23\x9a\x3e\xf6\x2e\x61\x4d\x25\xe5\xc7\xbb\x9a\x92\xc1\x7e\x05\xc0\xdb\x9b\xff\xe2\x76\x73\xa2\xbe\x39\xa7\xc9\x22\x47\xa4\x14\x9d\xa7\x22\xef\x0d\x72\xf2\xc4\xb0\x5e\xec\x7e\x42\x4d\x3b\x7d\xed\x83\x5a\xf4\xcf\xca\xc1\xa7\x4f\xe0\x1e\x59\x2c\xf6\x84\x13\x76\xfd\x0b\x85\x67\x1b\xe0\xa7\x17\x42\xbc\xf0\x76\x9b\x6b\xb2\x77\xbf\xbe\x72\x72\xa6\x55\x64\xaa\xe1\xec\x0a\x94\xd7\xf8\x0a\x5d\x8b\x15\x3d\x50\xac\xe1\x40\x91\xd5\x5d\x68\x29\xc8\x9f\xd1\x5c\xb2\x1f\xce\x8f\x59\xe7\xc5\x47\x9b\x17\x9e\x0f\x35\x91\x64\xc5\x9b\x5a\x90\xe3\x3d\x5b\x78\x7b\x91\x13\x37\x82\xa7\x0a\x00\xe4\xb5\xc5\xed\x42\xe2\xab\x5c\x40\xcb\x48\x85\xa7\x86\xd5\x28\xb6\x8b\x96\x21\xe9\x10\x90\x4b\x14\x40\xf4\x3a\xd0\x99\x13\xca\xf3\xe3\xea\xdc\xd4\xc8\xa2\xf4\x5a\xcf\x74\xed\x57\xdd\x6a\x45\xd3\xa2\x90\xd7\xf9\xae\x8d\x7e\x93\x4c\x1a\x66\xf6\x17\x32\xac\x64\xc6\x54\x92\xb1\xa1\x6f\x4a\xa2\x69\x25\x6d\x78\xb7\x5d\x48\x20\x1d\x48\x38\x34\x02\x24\x50\x0e\x4e\xe6\x0f\x72\xc6\x60\x9b\x19\x09\x78\x21\xec\x82\xdb\xc5\x62\x47\xf9\x09\x05\x95\x9b\xb5\x79\xe1\xa5\x9e\x76\x6b\xb4\x6e\xb8\x70\x3c\xdf\xbc\x1d\xfe\xd0\x70\x29\x1a\xd6\x81\x5a\xa6\xb0\xb8\x87\x4d\xdc\xba\xf6\xc2\xd8\x4a\xd0\xe3\x49\xc2\x93\xe4\xea\x7f\xf5\xda\x79\xfa\xbc\x64\xfd\xe0\xc7\x9e\x01\x7a\x11\x2c\xa8\x18\xad\x9e\xb7\x8b\xb6\x69\x2f\xed\x63\x73\x3c\x32\xfc\x6c\xd7\x7f\xf1\x77\xe4\x70\x35\x6f\xd9\xa5\x73\xd5\x9c\xf4\xce\xab\x56\x93\xba\xaf\x2d\xa9\x90\x09\xe5\xd1\xe7\xca\x06\x51\x0c\xc3\xfb\x5e\xca\x12\x3f\xae\xba\x53\xf3\xa7\x0d\x45\xe5\xbc\x15\x88\x32\xc2\x79\xa4\x56\x05\x35\xc7\xb5\x48\xef\x09\xf1\x10\x22\x75\xfd\x70\xa2\xac\xfe\x6e\xb4\x66\x51\x32\x7f\x94\x77\x28\x24\x54\x6a\xb5\x73\xc2\xc3\xc5\xe4\x4a\x64\x6c\xa2\xf1\x6f\xaa\x00\x4e\x35\xad\xab\xe5\xb0\xe1\xe0\x36\xbc\x19\x4e\x3d\xfd\xa3\xf2\x75\x42\x0e\xda\x18\xd4\xea\xff\xaa\x86\xf6\x2b\x09\x86\xbc\xa2\x2c\x4a\xb1\x62\x65\x71\x45\x3e\x9f\x03\x99\x9d\x37\x56\xf6\xdf\xbd\x0d\x63\x08\xfe\xd7\xf0\x7e\x9f\xfd\x1b\x0e\x84\x75\x38\x03\x0d\x81\xe7\xe6\x05\xd3\x0d\x37\xe1\x93\x75\x97\xaa\xc2\xee\xfd\x2e\x4b\x71\x99\xe3\x71\xf3\x9c\xf3\xb6\xd4\x9c\xb7\xdb\xad\x36\x30\xa1\x4b\x8f\x06\x2c\x05\xe9\x4e\xd3\xc3\x35\xd0\x7e\x13\xcd\xf9\x07\x11\xc8\xa5\x17\xf1\x89\x76\x33\x22\x36\x76\xf3\x09\x6b\x6e\x6c\xd1\xca\x21\x90\x06\xa8\x3f\x83\x40\x02\xee\xe2\x7b\x92\xd8\xb9\xc4\x65\xe4\x09\xd9\xce\xce\x06\xa6\xd7\x57\x27\xac\x9e\x9f\x9a\xd7\xb8\x51\xf6\x48\x44\x0d\xd6\x95\xdb\x75\x54\x6c\xec\xf3\xbe\x76\x18\x53\x81\xe1\xf1\xca\x6d\x81\x9c\xe3\x1e\xe5\x54\x7a\x88\xf5\xc3\xe1\x83\x12\xc4\x1a\xb6\xe9\x64\x39\x31\xd2\x44\x57\x51\xb0\x3a\x11\x7e\x44\x6f\x08\x31\x86\x7c\xdb\xa9\xb2\x18\xc0\x81\x09\x37\x07\x6a\x5f\x9d\xed\x85\xba\x6a\x58\xcf\xe5\x78\x53\xa3\x93\x1b\xee\xfb\x69\xe0\xc6\xa8\x7b\xaf\xf3\xc8\x7c\x0c\xfd\xe2\xde\xab\xad\x23\x8c\x2a\x1d\x02\x5b\x24\xd2\xae\x51\xd3\x54\x5e\x1b\x04\x1e\xf6\x0f\x6d\x5a\xeb\xb5\xf7\xa5\x7a\x1f\xea\x17\x6f\x4b\xbb\x15\x96\xff\x31\x98\xf4\x7b\xe3\xb6\x08\x06\x8c\x3c\x97\x8d\x4d\x04\x6c\x16\x92\xf9\x2c\xb4\x10\xe4\xe7\xdb\x9b\x79\xe9\x06\xe0\x9e\xb7\xc1\x18\x59\x4b\xcc\x18\x45\x0a\x59\x45\xd5\x9c\x62\x75\x9f\xb2\xa7\x01\x61\x4d\x85\x1d\xd1\x5b\x26\x33\x40\x46\xca\xd5\xce\x30\x92\x74\x7a\x80\x9f\xd0\x21\x11\xd5\x49\xa9\x56\xb3\xf2\x86\xee\x9c\x9b\x86\xb3\xf6\x24\xd9\xb3\x97\xf1\x3c\xeb\x85\x9b\xb6\x55\x55\xf7\xa2\x51\xe4\x44\xf1\x8f\x34\x12\xc3\x38\x43\xe1\x00\xfe\x59\xe6\xf5\x4e\x53\xc0\xeb\x8b\xc9\x62\x9d\x6c\x84\xfe\x5e\xfa\x62\x86\xb5\x8a\x5d\x6a\xdc\x53\xbe\x27\x8c\x19\xb3\xfa\x89\xda\x29\x1b\xba\x53\x4f\x15\x98\x6e\x48\x9b\xa9\x56\xa2\x38\xef\x5f\xb0\x92\x8d\xe8\x66\xe1\xe9\xbc\x50\x0a\xc0\x2a\x98\x80\x68\xfa\x2c\xa1\xfb\x43\xf4\x3f\xda\x5f\x91\xc1\x4c\xe3\x82\x7b\xf3\x4a\xb7\xc4\xae\x88\x59\xd0\x49\x34\xa9\xcd\x55\xf0\x21\x9e\x6b\xaa\x59\x86\xe4\x9a\xbf\x7b\xed\x8c\xf6\x52\x61\xb1\x6b\x14\xe6\xb7\xfe\x61\x97\x7f\xd6\xd2\x5f\xc2\x96\x10\xb5\xd0\xe4\x64\x68\x02\xa9\x84\xa9\xc4\x12\x7e\x6d\xc2\x87\x32\x49\xcb\x4f\xfa\x36\xce\xa4\xe1\xcf\x9e\xf5\x61\x2c\xc5\xbc\x99\x3f\x6a\x2a\x45\x58\xa6\xe6\xe1\xe4\xe9\x7f\x2e\x3c\x7a\xa4\xd6\xde\xe6\x38\xc0\x38\x52\x05\x1e\x30\xf5\xe3\xa6\x5c\xe0\x3d\x01\x24\x8c\x60\xdc\xff\x0c\x2b\x80\x80\x19\x84\x75\xa3\xe7\x05\x05\x46\x3f\x99\x03\x4c\x0c\x33\xe1\x02\x2e\xd2\x98\x09\x8c\x47\x9a\x63\x03\x90\xdd\xe2\x1e\x2b\x18\xac\x9a\x25\x5e\xf0\x2d\x93\xfc\xa5\xc4\x4e\xcf\x1c\x32\x25\xd7\x15\x5d\x55\x54\x4b\x7d\x2a\x3e\x9c\xf3\x26\x9d\xec\x08\x3d\x7c\x2c\xa7\xa5\x1f\xaf\x2d\xc6\xd3\x54\x7c\xe2\x76\x7f\x9a\xf8\x9d\x3d\x60\x99\x39\x4b\x0d\xa1\x11\xcc\x49\x05\x58\x26\x35\xa3\xe1\x76\x54\x6c\x44\x69\x2b\x0a\x8f\x83\xdf\x0d\x4c\x69\x8c\x18\x02\xc5\x0d\x69\xf3\xd2\xa4\x74\x72\xeb\x05\x3a\xfb\x04\xb7\xb7\x39\xf1\x24\xf7\x8e\xce\x6f\xce\x2f\x05\x63\x4d\x24\x4a\x7a\xc6\x39\x50\x3a\x19\x68\x89\xe8\xe6\x22\xaa\x84\xf7\x87\x46\x9c\x49\x29\xe7\x06\x41\x55\xe2\x8f\xf4\x8c\x3f\xb4\xe9\x7f\x2c\xb4\xe1\xd6\x8d\xfd\x8b\xea\xa3\x2e\x8b\x0f\xf6\x6c\x21\x89\x67\xf0\x9c\x24\x81\xd7\x30\x89\x98\xce\x9b\x3f\xfd\x6e\x2c\xc2\xb9\x06\x0d\x07\xc9\x1b\xd4\xef\x7e\xb7\xc1\x88\xbd\x94\x42\x2d\x13\x9a\xa9\x0e\xcd\x28\x3c\x4e\x6e\x5e\x04\x3e\x51\x1a\x89\xa3\x48\x89\xc6\x73\xb4\x74\x8c\xbe\x59\x33\x6a\x8e\x6c\x1a\xf6\x5b\x4f\x6c\xec\x6f\xee\xcc\xc6\xbe\x1a\x39\xb5\xb1\xab\xfc\x73\x9b\x58\xe7\xf0\xc9\x4d\x72\xb0\x9e\x3f\xbb\x89\x4f\x36\x6f\x81\x80\x85\x7e\xbb\xe8\x24\x91\xb4\xda\xb7\x02\x0f\xf4\x15\xfe\x05\xcb\x75\x4b\x84\xa4\x84\x75\x6b\xab\x61\xad\xa2\x5b\xd9\x1b\xed\xd6\xd7\x93\x3c\xb3\xa5\x1a\xaa\x7c\x90\x2d\xfa\x7f\x07\x00\x00\xff\xff\xd4\x96\x1a\x3b\xf0\x20\x00\x00")

func staticBleveMappingPartialsMappingTypeMappingTreeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsMappingTypeMappingTreeHtml,
		"static-bleve-mapping/partials/mapping/type-mapping-tree.html",
	)
}

func staticBleveMappingPartialsMappingTypeMappingTreeHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsMappingTypeMappingTreeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/mapping/type-mapping-tree.html", size: 8432, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticBleveMappingPartialsMappingTypeMappingHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x3d\x6e\xc3\x30\x0c\x85\x77\x9f\x82\xd0\xe2\xa1\x50\xb4\x17\xb2\x97\x5e\xa1\x7b\x40\x58\xac\x4b\x80\xa6\x04\x89\x09\x1a\x14\xbd\x7b\x11\x43\x71\x91\x6a\x13\xbf\xf7\x3e\xfd\xc4\xc4\x57\xb8\xb0\xb7\x4a\x34\xb9\x5c\x8c\xb3\x36\x37\x0f\x00\x31\xcb\x03\x78\xcd\x89\xda\x00\xfb\xd2\xd5\x6f\x39\x91\x4c\x6e\xc3\x52\x58\xd7\xe6\x3a\x49\x68\xe8\xed\x56\xe8\x40\xef\xb7\x42\x6f\x59\x0d\x59\xa9\xee\x56\x80\x28\x7c\x77\x54\x2a\x84\x76\x24\x81\x15\xfe\xfb\xe0\xe9\xfc\x63\xb8\x08\xb6\x76\x14\xff\xc2\xba\xfa\x8e\xbe\x47\x4a\x6c\xac\xeb\xf8\xfa\x90\x9e\xce\x7d\xf4\xf3\x54\x60\x5d\xe4\x92\x68\x72\xcd\xd0\x78\x39\x97\x4a\x1f\xfc\x05\x2f\x30\x86\x82\xd5\x18\xa5\x85\x6e\x08\xf7\x97\xf9\xbe\xd9\xaf\x75\xfa\xb4\x4d\x46\x37\xc7\x20\xbc\xff\x58\xc8\x32\x0f\x31\x24\xbe\xce\xc3\x6f\x00\x00\x00\xff\xff\x6f\x9d\x14\xad\x59\x01\x00\x00")

func staticBleveMappingPartialsMappingTypeMappingHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticBleveMappingPartialsMappingTypeMappingHtml,
		"static-bleve-mapping/partials/mapping/type-mapping.html",
	)
}

func staticBleveMappingPartialsMappingTypeMappingHtml() (*asset, error) {
	bytes, err := staticBleveMappingPartialsMappingTypeMappingHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static-bleve-mapping/partials/mapping/type-mapping.html", size: 345, mode: os.FileMode(420), modTime: time.Unix(1666172048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static-bleve-mapping/js/mapping/analysis-analyzer.js":                       staticBleveMappingJsMappingAnalysisAnalyzerJs,
	"static-bleve-mapping/js/mapping/analysis-charfilter.js":                     staticBleveMappingJsMappingAnalysisCharfilterJs,
	"static-bleve-mapping/js/mapping/analysis-tokenfilter.js":                    staticBleveMappingJsMappingAnalysisTokenfilterJs,
	"static-bleve-mapping/js/mapping/analysis-tokenizer.js":                      staticBleveMappingJsMappingAnalysisTokenizerJs,
	"static-bleve-mapping/js/mapping/analysis-wordlist.js":                       staticBleveMappingJsMappingAnalysisWordlistJs,
	"static-bleve-mapping/js/mapping/analysis.js":                                staticBleveMappingJsMappingAnalysisJs,
	"static-bleve-mapping/js/mapping/index-mapping.js":                           staticBleveMappingJsMappingIndexMappingJs,
	"static-bleve-mapping/js/mapping/type-mapping.js":                            staticBleveMappingJsMappingTypeMappingJs,
	"static-bleve-mapping/partials/analysis/analyzer.html":                       staticBleveMappingPartialsAnalysisAnalyzerHtml,
	"static-bleve-mapping/partials/analysis/analyzers.html":                      staticBleveMappingPartialsAnalysisAnalyzersHtml,
	"static-bleve-mapping/partials/analysis/charfilter.html":                     staticBleveMappingPartialsAnalysisCharfilterHtml,
	"static-bleve-mapping/partials/analysis/charfilters/generic.html":            staticBleveMappingPartialsAnalysisCharfiltersGenericHtml,
	"static-bleve-mapping/partials/analysis/charfilters/regexp.html":             staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml,
	"static-bleve-mapping/partials/analysis/charfilters.html":                    staticBleveMappingPartialsAnalysisCharfiltersHtml,
	"static-bleve-mapping/partials/analysis/tokenfilter.html":                    staticBleveMappingPartialsAnalysisTokenfilterHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/dict_compound.html":     staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/edge_ngram.html":        staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/elision.html":           staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/generic.html":           staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/keyword_marker.html":    staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/length.html":            staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/ngram.html":             staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/normalize_unicode.html": staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/shingle.html":           staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/stop_tokens.html":       staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/truncate_token.html":    staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters/wordmap.html":           staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml,
	"static-bleve-mapping/partials/analysis/tokenfilters.html":                   staticBleveMappingPartialsAnalysisTokenfiltersHtml,
	"static-bleve-mapping/partials/analysis/tokenizer.html":                      staticBleveMappingPartialsAnalysisTokenizerHtml,
	"static-bleve-mapping/partials/analysis/tokenizers/exception.html":           staticBleveMappingPartialsAnalysisTokenizersExceptionHtml,
	"static-bleve-mapping/partials/analysis/tokenizers/generic.html":             staticBleveMappingPartialsAnalysisTokenizersGenericHtml,
	"static-bleve-mapping/partials/analysis/tokenizers/regexp.html":              staticBleveMappingPartialsAnalysisTokenizersRegexpHtml,
	"static-bleve-mapping/partials/analysis/tokenizers.html":                     staticBleveMappingPartialsAnalysisTokenizersHtml,
	"static-bleve-mapping/partials/analysis/wordlist.html":                       staticBleveMappingPartialsAnalysisWordlistHtml,
	"static-bleve-mapping/partials/analysis/wordlists.html":                      staticBleveMappingPartialsAnalysisWordlistsHtml,
	"static-bleve-mapping/partials/mapping/index-mapping.html":                   staticBleveMappingPartialsMappingIndexMappingHtml,
	"static-bleve-mapping/partials/mapping/type-mapping-tree.html":               staticBleveMappingPartialsMappingTypeMappingTreeHtml,
	"static-bleve-mapping/partials/mapping/type-mapping.html":                    staticBleveMappingPartialsMappingTypeMappingHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"static-bleve-mapping": &bintree{nil, map[string]*bintree{
		"js": &bintree{nil, map[string]*bintree{
			"mapping": &bintree{nil, map[string]*bintree{
				"analysis-analyzer.js":    &bintree{staticBleveMappingJsMappingAnalysisAnalyzerJs, map[string]*bintree{}},
				"analysis-charfilter.js":  &bintree{staticBleveMappingJsMappingAnalysisCharfilterJs, map[string]*bintree{}},
				"analysis-tokenfilter.js": &bintree{staticBleveMappingJsMappingAnalysisTokenfilterJs, map[string]*bintree{}},
				"analysis-tokenizer.js":   &bintree{staticBleveMappingJsMappingAnalysisTokenizerJs, map[string]*bintree{}},
				"analysis-wordlist.js":    &bintree{staticBleveMappingJsMappingAnalysisWordlistJs, map[string]*bintree{}},
				"analysis.js":             &bintree{staticBleveMappingJsMappingAnalysisJs, map[string]*bintree{}},
				"index-mapping.js":        &bintree{staticBleveMappingJsMappingIndexMappingJs, map[string]*bintree{}},
				"type-mapping.js":         &bintree{staticBleveMappingJsMappingTypeMappingJs, map[string]*bintree{}},
			}},
		}},
		"partials": &bintree{nil, map[string]*bintree{
			"analysis": &bintree{nil, map[string]*bintree{
				"analyzer.html":   &bintree{staticBleveMappingPartialsAnalysisAnalyzerHtml, map[string]*bintree{}},
				"analyzers.html":  &bintree{staticBleveMappingPartialsAnalysisAnalyzersHtml, map[string]*bintree{}},
				"charfilter.html": &bintree{staticBleveMappingPartialsAnalysisCharfilterHtml, map[string]*bintree{}},
				"charfilters": &bintree{nil, map[string]*bintree{
					"generic.html": &bintree{staticBleveMappingPartialsAnalysisCharfiltersGenericHtml, map[string]*bintree{}},
					"regexp.html":  &bintree{staticBleveMappingPartialsAnalysisCharfiltersRegexpHtml, map[string]*bintree{}},
				}},
				"charfilters.html": &bintree{staticBleveMappingPartialsAnalysisCharfiltersHtml, map[string]*bintree{}},
				"tokenfilter.html": &bintree{staticBleveMappingPartialsAnalysisTokenfilterHtml, map[string]*bintree{}},
				"tokenfilters": &bintree{nil, map[string]*bintree{
					"dict_compound.html":     &bintree{staticBleveMappingPartialsAnalysisTokenfiltersDict_compoundHtml, map[string]*bintree{}},
					"edge_ngram.html":        &bintree{staticBleveMappingPartialsAnalysisTokenfiltersEdge_ngramHtml, map[string]*bintree{}},
					"elision.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersElisionHtml, map[string]*bintree{}},
					"generic.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersGenericHtml, map[string]*bintree{}},
					"keyword_marker.html":    &bintree{staticBleveMappingPartialsAnalysisTokenfiltersKeyword_markerHtml, map[string]*bintree{}},
					"length.html":            &bintree{staticBleveMappingPartialsAnalysisTokenfiltersLengthHtml, map[string]*bintree{}},
					"ngram.html":             &bintree{staticBleveMappingPartialsAnalysisTokenfiltersNgramHtml, map[string]*bintree{}},
					"normalize_unicode.html": &bintree{staticBleveMappingPartialsAnalysisTokenfiltersNormalize_unicodeHtml, map[string]*bintree{}},
					"shingle.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersShingleHtml, map[string]*bintree{}},
					"stop_tokens.html":       &bintree{staticBleveMappingPartialsAnalysisTokenfiltersStop_tokensHtml, map[string]*bintree{}},
					"truncate_token.html":    &bintree{staticBleveMappingPartialsAnalysisTokenfiltersTruncate_tokenHtml, map[string]*bintree{}},
					"wordmap.html":           &bintree{staticBleveMappingPartialsAnalysisTokenfiltersWordmapHtml, map[string]*bintree{}},
				}},
				"tokenfilters.html": &bintree{staticBleveMappingPartialsAnalysisTokenfiltersHtml, map[string]*bintree{}},
				"tokenizer.html":    &bintree{staticBleveMappingPartialsAnalysisTokenizerHtml, map[string]*bintree{}},
				"tokenizers": &bintree{nil, map[string]*bintree{
					"exception.html": &bintree{staticBleveMappingPartialsAnalysisTokenizersExceptionHtml, map[string]*bintree{}},
					"generic.html":   &bintree{staticBleveMappingPartialsAnalysisTokenizersGenericHtml, map[string]*bintree{}},
					"regexp.html":    &bintree{staticBleveMappingPartialsAnalysisTokenizersRegexpHtml, map[string]*bintree{}},
				}},
				"tokenizers.html": &bintree{staticBleveMappingPartialsAnalysisTokenizersHtml, map[string]*bintree{}},
				"wordlist.html":   &bintree{staticBleveMappingPartialsAnalysisWordlistHtml, map[string]*bintree{}},
				"wordlists.html":  &bintree{staticBleveMappingPartialsAnalysisWordlistsHtml, map[string]*bintree{}},
			}},
			"mapping": &bintree{nil, map[string]*bintree{
				"index-mapping.html":     &bintree{staticBleveMappingPartialsMappingIndexMappingHtml, map[string]*bintree{}},
				"type-mapping-tree.html": &bintree{staticBleveMappingPartialsMappingTypeMappingTreeHtml, map[string]*bintree{}},
				"type-mapping.html":      &bintree{staticBleveMappingPartialsMappingTypeMappingHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
